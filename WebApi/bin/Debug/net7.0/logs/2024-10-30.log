{ "message": "User profile is available. Using 'C:\\Users\\Ebrahim\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "level": "Info", "time": "2024-10-30 02:52:27.9709", "callsite": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.GetFallbackKeyRepositoryEncryptorPair", "eventPropertise": { "FullName": "C:\\Users\\Ebrahim\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" } }
{ "message": "Application started. Press Ctrl+C to shut down.", "level": "Info", "time": "2024-10-30 02:52:28.3266", "callsite": "Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.OnApplicationStarted" }
{ "message": "Hosting environment: Development", "level": "Info", "time": "2024-10-30 02:52:28.3266", "callsite": "Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.OnApplicationStarted", "eventPropertise": { "EnvName": "Development" } }
{ "message": "Content root path: E:\\Program\\Web\\Asp.Net core\\Projject\\News\\NewsWebSite-Test\\WebApi", "level": "Info", "time": "2024-10-30 02:52:28.3266", "callsite": "Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.NotifyStarted", "eventPropertise": { "ContentRoot": "E:\\Program\\Web\\Asp.Net core\\Projject\\News\\NewsWebSite-Test\\WebApi" } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger - -", "level": "Info", "time": "2024-10-30 02:52:28.4048", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger", "QueryString": "", "EventId": 1 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/index.html - -", "level": "Info", "time": "2024-10-30 02:52:28.6600", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger - - - 301 - - 267.7214ms", "level": "Info", "time": "2024-10-30 02:52:28.6600", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 267.7214, "StatusCode": 301, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger", "QueryString": "", "EventId": 2 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/index.html - - - 200 - text/html;charset=utf-8 463.1664ms", "level": "Info", "time": "2024-10-30 02:52:29.1232", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 463.1664, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/swagger-ui.css - -", "level": "Info", "time": "2024-10-30 02:52:29.1668", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 1 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/_framework/aspnetcore-browser-refresh.js - -", "level": "Info", "time": "2024-10-30 02:52:29.1695", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/_framework/aspnetcore-browser-refresh.js - - - 200 11982 application/javascript;+charset=utf-8 6.7088ms", "level": "Info", "time": "2024-10-30 02:52:29.1695", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 6.7088, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 11982, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/swagger-ui-standalone-preset.js - -", "level": "Info", "time": "2024-10-30 02:52:29.1695", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 1 } }
{ "message": "Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 02:52:29.1941", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/swagger-ui-standalone-preset.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/_vs/browserLink - -", "level": "Info", "time": "2024-10-30 02:52:29.1941", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 } }
{ "message": "Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 02:52:29.1941", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/swagger-ui.css", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/swagger-ui-bundle.js - -", "level": "Info", "time": "2024-10-30 02:52:29.1941", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/swagger-ui-standalone-preset.js - - - 200 339486 text/javascript 70.5537ms", "level": "Info", "time": "2024-10-30 02:52:29.2483", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 70.5537, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 339486, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 2 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/swagger-ui.css - - - 200 143943 text/css 93.4360ms", "level": "Info", "time": "2024-10-30 02:52:29.2483", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 93.436, "StatusCode": 200, "ContentType": "text/css", "ContentLength": 143943, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 2 } }
{ "message": "Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 02:52:29.2778", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/swagger-ui-bundle.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/swagger-ui-bundle.js - - - 200 1096145 text/javascript 224.1608ms", "level": "Info", "time": "2024-10-30 02:52:29.4208", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 224.1608, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 1096145, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 2 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 472.7424ms", "level": "Info", "time": "2024-10-30 02:52:29.6689", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 472.7424, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/v1/swagger.json - -", "level": "Info", "time": "2024-10-30 02:52:29.8820", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/favicon-32x32.png - -", "level": "Info", "time": "2024-10-30 02:52:29.8887", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 1 } }
{ "message": "Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 02:52:29.8887", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/favicon-32x32.png", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/favicon-32x32.png - - - 200 628 image/png 11.0570ms", "level": "Info", "time": "2024-10-30 02:52:29.8887", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 11.057, "StatusCode": 200, "ContentType": "image/png", "ContentLength": 628, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 2 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 415.2027ms", "level": "Info", "time": "2024-10-30 02:52:30.2973", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 415.2027, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 } }
{ "message": "User profile is available. Using 'C:\\Users\\Ebrahim\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "level": "Info", "time": "2024-10-30 07:30:52.3970", "callsite": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.GetFallbackKeyRepositoryEncryptorPair", "eventPropertise": { "FullName": "C:\\Users\\Ebrahim\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" } }
{ "message": "Application started. Press Ctrl+C to shut down.", "level": "Info", "time": "2024-10-30 07:30:54.2321", "callsite": "Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.OnApplicationStarted" }
{ "message": "Hosting environment: Development", "level": "Info", "time": "2024-10-30 07:30:54.2334", "callsite": "Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.OnApplicationStarted", "eventPropertise": { "EnvName": "Development" } }
{ "message": "Content root path: E:\\Program\\Web\\Asp.Net core\\Projject\\News\\NewsWebSite-Test\\WebApi", "level": "Info", "time": "2024-10-30 07:30:54.2334", "callsite": "Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.NotifyStarted", "eventPropertise": { "ContentRoot": "E:\\Program\\Web\\Asp.Net core\\Projject\\News\\NewsWebSite-Test\\WebApi" } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/index.html - -", "level": "Info", "time": "2024-10-30 07:30:54.4378", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/index.html - - - 200 - text/html;charset=utf-8 2671.5289ms", "level": "Info", "time": "2024-10-30 07:30:57.0919", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 2671.5289, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/_framework/aspnetcore-browser-refresh.js - -", "level": "Info", "time": "2024-10-30 07:30:57.5988", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/_framework/aspnetcore-browser-refresh.js - - - 200 11981 application/javascript;+charset=utf-8 60.5255ms", "level": "Info", "time": "2024-10-30 07:30:57.6602", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 60.5255, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 11981, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/_vs/browserLink - -", "level": "Info", "time": "2024-10-30 07:30:57.6602", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 687.0952ms", "level": "Info", "time": "2024-10-30 07:30:58.3483", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 687.0952, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/v1/swagger.json - -", "level": "Info", "time": "2024-10-30 07:30:58.6708", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 992.2631ms", "level": "Info", "time": "2024-10-30 07:30:59.6631", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 992.2631, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 } }
{ "message": "User profile is available. Using 'C:\\Users\\Ebrahim\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "level": "Info", "time": "2024-10-30 07:45:04.2815", "callsite": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.GetFallbackKeyRepositoryEncryptorPair", "eventPropertise": { "FullName": "C:\\Users\\Ebrahim\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" } }
{ "message": "Application started. Press Ctrl+C to shut down.", "level": "Info", "time": "2024-10-30 07:45:08.4848", "callsite": "Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.OnApplicationStarted" }
{ "message": "Hosting environment: Development", "level": "Info", "time": "2024-10-30 07:45:08.6211", "callsite": "Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.OnApplicationStarted", "eventPropertise": { "EnvName": "Development" } }
{ "message": "Content root path: E:\\Program\\Web\\Asp.Net core\\Projject\\News\\NewsWebSite-Test\\WebApi", "level": "Info", "time": "2024-10-30 07:45:08.6211", "callsite": "Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.NotifyStarted", "eventPropertise": { "ContentRoot": "E:\\Program\\Web\\Asp.Net core\\Projject\\News\\NewsWebSite-Test\\WebApi" } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/index.html - -", "level": "Info", "time": "2024-10-30 07:45:10.6164", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/index.html - - - 200 - text/html;charset=utf-8 24740.2632ms", "level": "Info", "time": "2024-10-30 07:45:35.3486", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 24740.2632, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/_vs/browserLink - -", "level": "Info", "time": "2024-10-30 07:45:36.2450", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/_framework/aspnetcore-browser-refresh.js - -", "level": "Info", "time": "2024-10-30 07:45:36.4490", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/_framework/aspnetcore-browser-refresh.js - - - 200 11981 application/javascript;+charset=utf-8 3.7835ms", "level": "Info", "time": "2024-10-30 07:45:36.4536", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 3.7835, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 11981, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 1217.4821ms", "level": "Info", "time": "2024-10-30 07:45:37.4625", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 1217.4821, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/v1/swagger.json - -", "level": "Info", "time": "2024-10-30 07:45:45.8397", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 477.6274ms", "level": "Info", "time": "2024-10-30 07:45:46.3174", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 477.6274, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/index.html - -", "level": "Info", "time": "2024-10-30 08:11:48.5569", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/index.html - - - 200 - text/html;charset=utf-8 23.9469ms", "level": "Info", "time": "2024-10-30 08:11:48.5809", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 23.9469, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/swagger-ui-bundle.js - -", "level": "Info", "time": "2024-10-30 08:11:48.6066", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 1 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/swagger-ui.css - -", "level": "Info", "time": "2024-10-30 08:11:48.6066", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 1 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/swagger-ui-standalone-preset.js - -", "level": "Info", "time": "2024-10-30 08:11:48.6100", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 1 } }
{ "message": "Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 08:11:48.7402", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/swagger-ui-standalone-preset.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 08:11:48.7402", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/swagger-ui.css", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/swagger-ui.css - - - 200 143943 text/css 181.4126ms", "level": "Info", "time": "2024-10-30 08:11:48.7881", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 181.4126, "StatusCode": 200, "ContentType": "text/css", "ContentLength": 143943, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/_framework/aspnetcore-browser-refresh.js - -", "level": "Info", "time": "2024-10-30 08:11:48.7881", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/_framework/aspnetcore-browser-refresh.js - - - 200 11981 application/javascript;+charset=utf-8 1.1463ms", "level": "Info", "time": "2024-10-30 08:11:48.7881", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 1.1463, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 11981, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 } }
{ "message": "Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 08:11:48.8002", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/swagger-ui-bundle.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/_vs/browserLink - -", "level": "Info", "time": "2024-10-30 08:11:48.8002", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/swagger-ui-standalone-preset.js - - - 200 339486 text/javascript 290.4458ms", "level": "Info", "time": "2024-10-30 08:11:48.9005", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 290.4458, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 339486, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 2 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 210.8941ms", "level": "Info", "time": "2024-10-30 08:11:49.0181", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 210.8941, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/swagger-ui-bundle.js - - - 200 1096145 text/javascript 428.1809ms", "level": "Info", "time": "2024-10-30 08:11:49.0348", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 428.1809, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 1096145, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/favicon-32x32.png - -", "level": "Info", "time": "2024-10-30 08:12:11.4881", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 1 } }
{ "message": "Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 08:12:11.5143", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/favicon-32x32.png", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/favicon-32x32.png - - - 200 628 image/png 26.7420ms", "level": "Info", "time": "2024-10-30 08:12:11.5143", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 26.742, "StatusCode": 200, "ContentType": "image/png", "ContentLength": 628, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/v1/swagger.json - -", "level": "Info", "time": "2024-10-30 08:12:11.5143", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 41.6414ms", "level": "Info", "time": "2024-10-30 08:12:11.5699", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 41.6414, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/api/Post - -", "level": "Info", "time": "2024-10-30 09:01:54.4379", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Post", "QueryString": "", "EventId": 1 } }
{ "message": "Authorization failed. These requirements were not met:\r\nDenyAnonymousAuthorizationRequirement: Requires an authenticated user.", "level": "Info", "time": "2024-10-30 09:01:56.0917", "callsite": "Microsoft.AspNetCore.Authorization.DefaultAuthorizationService.AuthorizeAsync", "eventPropertise": { "Reason": "These requirements were not met:\r\nDenyAnonymousAuthorizationRequirement: Requires an authenticated user.", "EventId": 2, "EventName": "UserAuthorizationFailed" } }
{ "message": "AuthenticationScheme: Bearer was challenged.", "level": "Info", "time": "2024-10-30 09:01:56.1040", "callsite": "Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync", "eventPropertise": { "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/api/Post - - - 401 - - 1677.7964ms", "level": "Info", "time": "2024-10-30 09:01:56.1156", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 1677.7964, "StatusCode": 401, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Post", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 POST https://localhost:44307/api/Account?email=asp00net%40gmail.com&password=As%40137455 - 0", "level": "Info", "time": "2024-10-30 09:02:57.3646", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "POST", "ContentType": null, "ContentLength": 0, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Account", "QueryString": "?email=asp00net%40gmail.com&password=As%40137455", "EventId": 1 } }
{ "message": "Executing endpoint 'WebApi.Controllers.AccountController.Post (WebApi)'", "level": "Info", "time": "2024-10-30 09:02:57.4192", "callsite": "Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke", "eventPropertise": { "EndpointName": {"Order":0, "RoutePattern":{"Defaults":{"action":"Post","controller":"Account"}, "ParameterPolicies":{}, "RequiredValues":{"action":"Post", "controller":"Account"}, "InboundPrecedence":1.1, "OutboundPrecedence":5.5, "RawText":"api/Account", "Parameters":[], "PathSegments":[{"IsSimple":true, "Parts":[{"Content":"api", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]},{"IsSimple":true, "Parts":[{"Content":"Account", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]}]}, "DisplayName":"WebApi.Controllers.AccountController.Post (WebApi)", "Metadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["POST"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpPostAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["POST"]},{"ControllerName":"Account", "ActionName":"Post", "MethodInfo":"Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String)", "ControllerTypeInfo":"WebApi.Controllers.AccountController", "DisplayName":"WebApi.Controllers.AccountController.Post (WebApi)", "Id":"71b91869-2150-4a09-b945-7218a20d95ae", "RouteValues":{"action":"Post","controller":"Account"}, "AttributeRouteInfo":{"Template":"api/Account", "Order":0, "SuppressLinkGeneration":false, "SuppressPathMatching":false}, "ActionConstraints":[{"HttpMethods":["POST"], "Order":100}], "EndpointMetadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["POST"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpPostAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["POST"]}], "Parameters":[{"ParameterInfo":{"ParameterType":"System.String", "Name":"email", "HasDefaultValue":false, "DefaultValue":"", "RawDefaultValue":"", "MetadataToken":134217747, "Attributes":"None", "Member":"Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String)", "Position":0, "IsIn":false, "IsLcid":false, "IsOptional":false, "IsOut":false, "IsRetval":false, "CustomAttributes":[]}, "Name":"email", "ParameterType":"System.String", "BindingInfo":{"BindingSource":{"DisplayName":"Query", "Id":"Query", "IsGreedy":false, "IsFromRequest":true}, "EmptyBodyBehavior":"Default"}},{"ParameterInfo":{"ParameterType":"System.String", "Name":"password", "HasDefaultValue":false, "DefaultValue":"", "RawDefaultValue":"", "MetadataToken":134217748, "Attributes":"None", "Member":"Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String)", "Position":1, "IsIn":false, "IsLcid":false, "IsOptional":false, "IsOut":false, "IsRetval":false, "CustomAttributes":[]}, "Name":"password", "ParameterType":"System.String", "BindingInfo":{"BindingSource":{"DisplayName":"Query", "Id":"Query", "IsGreedy":false, "IsFromRequest":true}, "EmptyBodyBehavior":"Default"}}], "BoundProperties":[], "FilterDescriptors":[{"Filter":{"Order":-3000}, "Order":-3000, "Scope":10},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"}, "Order":0, "Scope":20}], "Properties":{"Microsoft.AspNetCore.Mvc.ApiDescriptionActionData":{},"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute":{"Type":"Microsoft.AspNetCore.Mvc.ProblemDetails", "TypeId":"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute"}}},{},{"Order":-3000},{"Order":-2000, "IsReusable":true},{"Order":-2000, "IsReusable":true},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"HttpMethods":["POST"], "Order":100}], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} } }
{ "message": "Route matched with {action = \"Post\", controller = \"Account\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String) on controller WebApi.Controllers.AccountController (WebApi).", "level": "Info", "time": "2024-10-30 09:02:57.5362", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker+Log.ExecutingAction", "eventPropertise": { "RouteData": "{action = \"Post\", controller = \"Account\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String)", "Controller": "WebApi.Controllers.AccountController", "AssemblyName": "WebApi", "EventId": 102, "EventName": "ControllerActionExecuting" } }
{ "message": "Executing action method WebApi.Controllers.AccountController.Post (WebApi) - Validation state: Valid", "level": "Info", "time": "2024-10-30 09:02:58.5550", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker+Log.ActionMethodExecuting", "eventPropertise": { "ActionName": "WebApi.Controllers.AccountController.Post (WebApi)", "ValidationState": "Valid", "EventId": 101, "EventName": "ActionMethodExecuting" } }
{ "message": "Post method called with email: \"asp00net@gmail.com\"", "level": "Info", "time": "2024-10-30 09:02:58.5755", "callsite": "WebApi.Controllers.AccountController.Post", "eventPropertise": { "Email": "asp00net@gmail.com" } }
{ "message": "Executed DbCommand (264ms) [Parameters=[@__normalizedUserName_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedUserName] = @__normalizedUserName_0", "level": "Info", "time": "2024-10-30 09:03:03.1940", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "264", "parameters": "@__normalizedUserName_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedUserName] = @__normalizedUserName_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (7ms) [Parameters=[@__user_Id_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT [u].[Id], [u].[ClaimType], [u].[ClaimValue], [u].[UserId]\r\nFROM [identity].[UserClaims] AS [u]\r\nWHERE [u].[UserId] = @__user_Id_0", "level": "Info", "time": "2024-10-30 09:03:03.8437", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "7", "parameters": "@__user_Id_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT [u].[Id], [u].[ClaimType], [u].[ClaimValue], [u].[UserId]\r\nFROM [identity].[UserClaims] AS [u]\r\nWHERE [u].[UserId] = @__user_Id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (25ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']\r\nSELECT [t].[Name]\r\nFROM [identity].[UserRoles] AS [u]\r\nINNER JOIN (\r\n    SELECT [r].[Id], [r].[Name]\r\n    FROM [identity].[Roles] AS [r]\r\n    WHERE [r].[Discriminator] = N'Role'\r\n) AS [t] ON [u].[RoleId] = [t].[Id]\r\nWHERE [u].[UserId] = @__userId_0", "level": "Info", "time": "2024-10-30 09:03:03.9812", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "25", "parameters": "@__userId_0='?' (Size = 450)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT [t].[Name]\r\nFROM [identity].[UserRoles] AS [u]\r\nINNER JOIN (\r\n    SELECT [r].[Id], [r].[Name]\r\n    FROM [identity].[Roles] AS [r]\r\n    WHERE [r].[Discriminator] = N'Role'\r\n) AS [t] ON [u].[RoleId] = [t].[Id]\r\nWHERE [u].[UserId] = @__userId_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (5ms) [Parameters=[@__normalizedName_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Discriminator], [r].[Name], [r].[NormalizedName], [r].[Description]\r\nFROM [identity].[Roles] AS [r]\r\nWHERE [r].[Discriminator] = N'Role' AND [r].[NormalizedName] = @__normalizedName_0", "level": "Info", "time": "2024-10-30 09:03:04.0313", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "5", "parameters": "@__normalizedName_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Discriminator], [r].[Name], [r].[NormalizedName], [r].[Description]\r\nFROM [identity].[Roles] AS [r]\r\nWHERE [r].[Discriminator] = N'Role' AND [r].[NormalizedName] = @__normalizedName_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (6ms) [Parameters=[@__role_Id_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT [r].[ClaimType], [r].[ClaimValue]\r\nFROM [identity].[RoleClaims] AS [r]\r\nWHERE [r].[RoleId] = @__role_Id_0", "level": "Info", "time": "2024-10-30 09:03:04.0871", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "6", "parameters": "@__role_Id_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT [r].[ClaimType], [r].[ClaimValue]\r\nFROM [identity].[RoleClaims] AS [r]\r\nWHERE [r].[RoleId] = @__role_Id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (2ms) [Parameters=[@__normalizedName_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Discriminator], [r].[Name], [r].[NormalizedName], [r].[Description]\r\nFROM [identity].[Roles] AS [r]\r\nWHERE [r].[Discriminator] = N'Role' AND [r].[NormalizedName] = @__normalizedName_0", "level": "Info", "time": "2024-10-30 09:03:04.0971", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "2", "parameters": "@__normalizedName_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Discriminator], [r].[Name], [r].[NormalizedName], [r].[Description]\r\nFROM [identity].[Roles] AS [r]\r\nWHERE [r].[Discriminator] = N'Role' AND [r].[NormalizedName] = @__normalizedName_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (1ms) [Parameters=[@__role_Id_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT [r].[ClaimType], [r].[ClaimValue]\r\nFROM [identity].[RoleClaims] AS [r]\r\nWHERE [r].[RoleId] = @__role_Id_0", "level": "Info", "time": "2024-10-30 09:03:04.0971", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "1", "parameters": "@__role_Id_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT [r].[ClaimType], [r].[ClaimValue]\r\nFROM [identity].[RoleClaims] AS [r]\r\nWHERE [r].[RoleId] = @__role_Id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "AuthenticationScheme: Identity.Application signed in.", "level": "Info", "time": "2024-10-30 09:03:04.1409", "callsite": "Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.HandleSignInAsync", "eventPropertise": { "AuthenticationScheme": "Identity.Application", "EventId": 10, "EventName": "AuthenticationSchemeSignedIn" } }
{ "message": "User signed in successfully for email: \"asp00net@gmail.com\"", "level": "Info", "time": "2024-10-30 09:03:04.1409", "callsite": "WebApi.Controllers.AccountController.Post", "eventPropertise": { "Email": "asp00net@gmail.com" } }
{ "message": "Executed DbCommand (11ms) [Parameters=[@__normalizedEmail_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(2) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedEmail] = @__normalizedEmail_0", "level": "Info", "time": "2024-10-30 09:03:04.1739", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "11", "parameters": "@__normalizedEmail_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(2) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedEmail] = @__normalizedEmail_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (67ms) [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450), @__p_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [u].[UserId], [u].[LoginProvider], [u].[Name], [u].[Value]\r\nFROM [identity].[UserTokens] AS [u]\r\nWHERE [u].[UserId] = @__p_0 AND [u].[LoginProvider] = @__p_1 AND [u].[Name] = @__p_2", "level": "Info", "time": "2024-10-30 09:03:04.8143", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "67", "parameters": "@__p_0='?' (Size = 450), @__p_1='?' (Size = 450), @__p_2='?' (Size = 450)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(1) [u].[UserId], [u].[LoginProvider], [u].[Name], [u].[Value]\r\nFROM [identity].[UserTokens] AS [u]\r\nWHERE [u].[UserId] = @__p_0 AND [u].[LoginProvider] = @__p_1 AND [u].[Name] = @__p_2", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (88ms) [Parameters=[@__normalizedUserName_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedUserName] = @__normalizedUserName_0", "level": "Info", "time": "2024-10-30 09:03:04.9902", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "88", "parameters": "@__normalizedUserName_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedUserName] = @__normalizedUserName_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (12ms) [Parameters=[@__normalizedEmail_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(2) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedEmail] = @__normalizedEmail_0", "level": "Info", "time": "2024-10-30 09:03:05.0115", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "12", "parameters": "@__normalizedEmail_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(2) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedEmail] = @__normalizedEmail_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (46ms) [Parameters=[@p1='?' (Size = 450), @p2='?' (Size = 450), @p3='?' (Size = 450), @p0='?' (Size = 4000), @p19='?' (Size = 450), @p4='?' (DbType = Int32), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (Size = 4000), @p9='?' (DbType = Boolean), @p10='?' (DbType = DateTimeOffset), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 4000), @p17='?' (DbType = Boolean), @p18='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSET NOCOUNT ON;\r\nUPDATE [identity].[UserTokens] SET [Value] = @p0\r\nOUTPUT 1\r\nWHERE [LoginProvider] = @p1 AND [Name] = @p2 AND [UserId] = @p3;\r\nUPDATE [identity].[Users] SET [AccessFailedCount] = @p4, [ConcurrencyStamp] = @p5, [Email] = @p6, [EmailConfirmed] = @p7, [FullName] = @p8, [LockoutEnabled] = @p9, [LockoutEnd] = @p10, [NormalizedEmail] = @p11, [NormalizedUserName] = @p12, [PasswordHash] = @p13, [PhoneNumber] = @p14, [PhoneNumberConfirmed] = @p15, [SecurityStamp] = @p16, [TwoFactorEnabled] = @p17, [UserName] = @p18\r\nOUTPUT 1\r\nWHERE [Id] = @p19;", "level": "Info", "time": "2024-10-30 09:03:05.3706", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "46", "parameters": "@p1='?' (Size = 450), @p2='?' (Size = 450), @p3='?' (Size = 450), @p0='?' (Size = 4000), @p19='?' (Size = 450), @p4='?' (DbType = Int32), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (Size = 4000), @p9='?' (DbType = Boolean), @p10='?' (DbType = DateTimeOffset), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 4000), @p17='?' (DbType = Boolean), @p18='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nUPDATE [identity].[UserTokens] SET [Value] = @p0\r\nOUTPUT 1\r\nWHERE [LoginProvider] = @p1 AND [Name] = @p2 AND [UserId] = @p3;\r\nUPDATE [identity].[Users] SET [AccessFailedCount] = @p4, [ConcurrencyStamp] = @p5, [Email] = @p6, [EmailConfirmed] = @p7, [FullName] = @p8, [LockoutEnabled] = @p9, [LockoutEnd] = @p10, [NormalizedEmail] = @p11, [NormalizedUserName] = @p12, [PasswordHash] = @p13, [PhoneNumber] = @p14, [PhoneNumberConfirmed] = @p15, [SecurityStamp] = @p16, [TwoFactorEnabled] = @p17, [UserName] = @p18\r\nOUTPUT 1\r\nWHERE [Id] = @p19;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed action method WebApi.Controllers.AccountController.Post (WebApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 6856.8562ms.", "level": "Info", "time": "2024-10-30 09:03:05.4189", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker+Log.ActionMethodExecuted", "eventPropertise": { "ActionName": "WebApi.Controllers.AccountController.Post (WebApi)", "ActionResult": "Microsoft.AspNetCore.Mvc.OkObjectResult", "ElapsedMilliseconds": 6856.8562, "EventId": 103, "EventName": "ActionMethodExecuted" } }
{ "message": "Executing OkObjectResult, writing value of type 'WebApi.Model.LoginResultDto'.", "level": "Info", "time": "2024-10-30 09:03:05.4363", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor+Log.ObjectResultExecuting", "eventPropertise": { "ObjectResultType": "OkObjectResult", "Type": "WebApi.Model.LoginResultDto", "EventId": 1, "EventName": "ObjectResultExecuting" } }
{ "message": "Executed action WebApi.Controllers.AccountController.Post (WebApi) in 7909.3727ms", "level": "Info", "time": "2024-10-30 09:03:05.4509", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker+Log.ExecutedAction", "eventPropertise": { "ActionName": "WebApi.Controllers.AccountController.Post (WebApi)", "ElapsedMilliseconds": 7909.3727, "EventId": 105, "EventName": "ActionExecuted" } }
{ "message": "Executed endpoint 'WebApi.Controllers.AccountController.Post (WebApi)'", "level": "Info", "time": "2024-10-30 09:03:05.4509", "callsite": "Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke", "eventPropertise": { "EndpointName": {"Order":0, "RoutePattern":{"Defaults":{"action":"Post","controller":"Account"}, "ParameterPolicies":{}, "RequiredValues":{"action":"Post", "controller":"Account"}, "InboundPrecedence":1.1, "OutboundPrecedence":5.5, "RawText":"api/Account", "Parameters":[], "PathSegments":[{"IsSimple":true, "Parts":[{"Content":"api", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]},{"IsSimple":true, "Parts":[{"Content":"Account", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]}]}, "DisplayName":"WebApi.Controllers.AccountController.Post (WebApi)", "Metadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["POST"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpPostAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["POST"]},{"ControllerName":"Account", "ActionName":"Post", "MethodInfo":"Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String)", "ControllerTypeInfo":"WebApi.Controllers.AccountController", "DisplayName":"WebApi.Controllers.AccountController.Post (WebApi)", "Id":"71b91869-2150-4a09-b945-7218a20d95ae", "RouteValues":{"action":"Post","controller":"Account"}, "AttributeRouteInfo":{"Template":"api/Account", "Order":0, "SuppressLinkGeneration":false, "SuppressPathMatching":false}, "ActionConstraints":[{"HttpMethods":["POST"], "Order":100}], "EndpointMetadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["POST"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpPostAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["POST"]}], "Parameters":[{"ParameterInfo":{"ParameterType":"System.String", "Name":"email", "HasDefaultValue":false, "DefaultValue":"", "RawDefaultValue":"", "MetadataToken":134217747, "Attributes":"None", "Member":"Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String)", "Position":0, "IsIn":false, "IsLcid":false, "IsOptional":false, "IsOut":false, "IsRetval":false, "CustomAttributes":[]}, "Name":"email", "ParameterType":"System.String", "BindingInfo":{"BindingSource":{"DisplayName":"Query", "Id":"Query", "IsGreedy":false, "IsFromRequest":true}, "EmptyBodyBehavior":"Default"}},{"ParameterInfo":{"ParameterType":"System.String", "Name":"password", "HasDefaultValue":false, "DefaultValue":"", "RawDefaultValue":"", "MetadataToken":134217748, "Attributes":"None", "Member":"Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String)", "Position":1, "IsIn":false, "IsLcid":false, "IsOptional":false, "IsOut":false, "IsRetval":false, "CustomAttributes":[]}, "Name":"password", "ParameterType":"System.String", "BindingInfo":{"BindingSource":{"DisplayName":"Query", "Id":"Query", "IsGreedy":false, "IsFromRequest":true}, "EmptyBodyBehavior":"Default"}}], "BoundProperties":[], "FilterDescriptors":[{"Filter":{"Order":-3000}, "Order":-3000, "Scope":10},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"}, "Order":0, "Scope":20}], "Properties":{"Microsoft.AspNetCore.Mvc.ApiDescriptionActionData":{},"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute":{"Type":"Microsoft.AspNetCore.Mvc.ProblemDetails", "TypeId":"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute"}}},{},{"Order":-3000},{"Order":-2000, "IsReusable":true},{"Order":-2000, "IsReusable":true},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"HttpMethods":["POST"], "Order":100}], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" } }
{ "message": "Request finished HTTP/2 POST https://localhost:44307/api/Account?email=asp00net%40gmail.com&password=As%40137455 - 0 - 200 - application/json;+charset=utf-8 8132.9909ms", "level": "Info", "time": "2024-10-30 09:03:05.4976", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 8132.9909, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "POST", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Account", "QueryString": "?email=asp00net%40gmail.com&password=As%40137455", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/api/Post - -", "level": "Info", "time": "2024-10-30 09:05:38.3523", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Post", "QueryString": "", "EventId": 1 } }
{ "message": "Failed to validate the token.", "level": "Info", "time": "2024-10-30 09:05:39.1705", "callsite": "Microsoft.Extensions.Logging.LoggingExtensions.TokenValidationFailed", "eventPropertise": { "EventId": 1, "EventName": "TokenValidationFailed" } }
{ "message": "Bearer was not authenticated. Failure message: IDX10503: Signature validation failed. Token does not have a kid. Keys tried: '[PII of type 'System.Text.StringBuilder' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.Text.StringBuilder' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'System.IdentityModel.Tokens.Jwt.JwtSecurityToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.", "level": "Info", "time": "2024-10-30 09:05:39.1705", "callsite": "Microsoft.Extensions.Logging.LoggingExtensions.AuthenticationSchemeNotAuthenticatedWithFailure", "eventPropertise": { "AuthenticationScheme": "Bearer", "FailureMessage": "IDX10503: Signature validation failed. Token does not have a kid. Keys tried: '[PII of type 'System.Text.StringBuilder' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Number of keys in TokenValidationParameters: '1'. \nNumber of keys in Configuration: '0'. \nExceptions caught:\n '[PII of type 'System.Text.StringBuilder' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.\ntoken: '[PII of type 'System.IdentityModel.Tokens.Jwt.JwtSecurityToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.", "EventId": 7, "EventName": "AuthenticationSchemeNotAuthenticatedWithFailure" } }
{ "message": "Authorization failed. These requirements were not met:\r\nDenyAnonymousAuthorizationRequirement: Requires an authenticated user.", "level": "Info", "time": "2024-10-30 09:05:39.1705", "callsite": "Microsoft.AspNetCore.Authorization.DefaultAuthorizationService.AuthorizeAsync", "eventPropertise": { "Reason": "These requirements were not met:\r\nDenyAnonymousAuthorizationRequirement: Requires an authenticated user.", "EventId": 2, "EventName": "UserAuthorizationFailed" } }
{ "message": "AuthenticationScheme: Bearer was challenged.", "level": "Info", "time": "2024-10-30 09:05:39.1888", "callsite": "Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync", "eventPropertise": { "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/api/Post - - - 401 - - 867.9308ms", "level": "Info", "time": "2024-10-30 09:05:39.2202", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 867.9308, "StatusCode": 401, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Post", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/api/Post - -", "level": "Info", "time": "2024-10-30 09:05:55.6991", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Post", "QueryString": "", "EventId": 1 } }
{ "message": "Executed DbCommand (24ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[Id] = @__p_0", "level": "Info", "time": "2024-10-30 09:05:55.9220", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "24", "parameters": "@__p_0='?' (Size = 450)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[Id] = @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executing endpoint 'WebApi.Controllers.PostController.Get (WebApi)'", "level": "Info", "time": "2024-10-30 09:05:55.9379", "callsite": "Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke", "eventPropertise": { "EndpointName": {"Order":0, "RoutePattern":{"Defaults":{"action":"Get","controller":"Post"}, "ParameterPolicies":{}, "RequiredValues":{"action":"Get", "controller":"Post"}, "InboundPrecedence":1.1, "OutboundPrecedence":5.5, "RawText":"api/Post", "Parameters":[], "PathSegments":[{"IsSimple":true, "Parts":[{"Content":"api", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]},{"IsSimple":true, "Parts":[{"Content":"Post", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]}]}, "DisplayName":"WebApi.Controllers.PostController.Get (WebApi)", "Metadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Authorization.AuthorizeAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["GET"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpGetAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["GET"]},{"ControllerName":"Post", "ActionName":"Get", "MethodInfo":"Microsoft.AspNetCore.Mvc.IActionResult Get(Application.Posts.GetPostPLP.Dto.PostPLPRequestDto)", "ControllerTypeInfo":"WebApi.Controllers.PostController", "DisplayName":"WebApi.Controllers.PostController.Get (WebApi)", "Id":"152b8676-413c-433c-a78c-0bdf55aafda5", "RouteValues":{"action":"Get","controller":"Post"}, "AttributeRouteInfo":{"Template":"api/Post", "Order":0, "SuppressLinkGeneration":false, "SuppressPathMatching":false}, "ActionConstraints":[{"HttpMethods":["GET"], "Order":100}], "EndpointMetadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Authorization.AuthorizeAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["GET"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpGetAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["GET"]}], "Parameters":[{"ParameterInfo":{"ParameterType":"Application.Posts.GetPostPLP.Dto.PostPLPRequestDto", "Name":"requestDto", "HasDefaultValue":false, "DefaultValue":"", "RawDefaultValue":"", "MetadataToken":134217763, "Attributes":"None", "Member":"Microsoft.AspNetCore.Mvc.IActionResult Get(Application.Posts.GetPostPLP.Dto.PostPLPRequestDto)", "Position":0, "IsIn":false, "IsLcid":false, "IsOptional":false, "IsOut":false, "IsRetval":false, "CustomAttributes":[{"Constructor":"Void .ctor()", "ConstructorArguments":[], "NamedArguments":[], "AttributeType":"Microsoft.AspNetCore.Mvc.FromQueryAttribute"}]}, "Name":"requestDto", "ParameterType":"Application.Posts.GetPostPLP.Dto.PostPLPRequestDto", "BindingInfo":{"BindingSource":{"DisplayName":"Query", "Id":"Query", "IsGreedy":false, "IsFromRequest":true}, "EmptyBodyBehavior":"Default"}}], "BoundProperties":[], "FilterDescriptors":[{"Filter":{"Order":-3000}, "Order":-3000, "Scope":10},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"}, "Order":0, "Scope":20}], "Properties":{"Microsoft.AspNetCore.Mvc.ApiDescriptionActionData":{},"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute":{"Type":"Microsoft.AspNetCore.Mvc.ProblemDetails", "TypeId":"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute"}}},{},{"Order":-3000},{"Order":-2000, "IsReusable":true},{"Order":-2000, "IsReusable":true},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"HttpMethods":["GET"], "Order":100}], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} } }
{ "message": "Route matched with {action = \"Get\", controller = \"Post\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Get(Application.Posts.GetPostPLP.Dto.PostPLPRequestDto) on controller WebApi.Controllers.PostController (WebApi).", "level": "Info", "time": "2024-10-30 09:05:56.0161", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker+Log.ExecutingAction", "eventPropertise": { "RouteData": "{action = \"Get\", controller = \"Post\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Get(Application.Posts.GetPostPLP.Dto.PostPLPRequestDto)", "Controller": "WebApi.Controllers.PostController", "AssemblyName": "WebApi", "EventId": 102, "EventName": "ControllerActionExecuting" } }
{ "message": "Executing action method WebApi.Controllers.PostController.Get (WebApi) - Validation state: Valid", "level": "Info", "time": "2024-10-30 09:05:56.2275", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker+Log.ActionMethodExecuting", "eventPropertise": { "ActionName": "WebApi.Controllers.PostController.Get (WebApi)", "ValidationState": "Valid", "EventId": 101, "EventName": "ActionMethodExecuting" } }
{ "message": "Entity 'Post' has a global query filter defined and is the required end of a relationship with the entity 'PostImage'. This may lead to unexpected results when the required entity is filtered out. Either configure the navigation as optional, or define matching query filters for both entities in the navigation. See https://go.microsoft.com/fwlink/?linkid=2131316 for more information.", "level": "Warn", "time": "2024-10-30 09:05:56.8129", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2.Log", "eventPropertise": { "principalEntityType": "Post", "declaringEntityType": "PostImage", "EventId": 10622, "EventName": "Microsoft.EntityFrameworkCore.Model.Validation.PossibleIncorrectRequiredNavigationWithQueryFilterInteractionWarning" } }
{ "message": "Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT COUNT(*)\r\nFROM [Posts] AS [p]\r\nWHERE [p].[IsRemove] = CAST(0 AS bit)", "level": "Info", "time": "2024-10-30 09:05:57.0669", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "19", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT COUNT(*)\r\nFROM [Posts] AS [p]\r\nWHERE [p].[IsRemove] = CAST(0 AS bit)", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "level": "Warn", "time": "2024-10-30 09:05:57.0970", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition.Log", "eventPropertise": { "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" } }
{ "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "level": "Warn", "time": "2024-10-30 09:05:57.0970", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition.Log", "eventPropertise": { "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" } }
{ "message": "Executed DbCommand (40ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT [t].[Id], [t].[CategoryTypeId], [t].[Content], [t].[InsertTime], [t].[IsRemove], [t].[PostDescription], [t].[RemoveTime], [t].[TimeRequired], [t].[Titel], [t].[UpdateTime], [t].[UserId], [t].[VisitCount], [t0].[Id], [p0].[Id], [p0].[InsertTime], [p0].[IsRemove], [p0].[PostId], [p0].[RemoveTime], [p0].[Src], [p0].[UpdateTime], [t0].[InsertTime], [t0].[IsRemove], [t0].[ParentTypeId], [t0].[RemoveTime], [t0].[Type], [t0].[UpdateTime]\r\nFROM (\r\n    SELECT [p].[Id], [p].[CategoryTypeId], [p].[Content], [p].[InsertTime], [p].[IsRemove], [p].[PostDescription], [p].[RemoveTime], [p].[TimeRequired], [p].[Titel], [p].[UpdateTime], [p].[UserId], [p].[VisitCount]\r\n    FROM [Posts] AS [p]\r\n    WHERE [p].[IsRemove] = CAST(0 AS bit)\r\n    ORDER BY (SELECT 1)\r\n    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY\r\n) AS [t]\r\nINNER JOIN (\r\n    SELECT [c].[Id], [c].[InsertTime], [c].[IsRemove], [c].[ParentTypeId], [c].[RemoveTime], [c].[Type], [c].[UpdateTime]\r\n    FROM [CategoryTypes] AS [c]\r\n    WHERE [c].[IsRemove] = CAST(0 AS bit)\r\n) AS [t0] ON [t].[CategoryTypeId] = [t0].[Id]\r\nLEFT JOIN [PostImage] AS [p0] ON [t].[Id] = [p0].[PostId]\r\nORDER BY [t].[Id], [t0].[Id]", "level": "Info", "time": "2024-10-30 09:05:57.2400", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "40", "parameters": "@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT [t].[Id], [t].[CategoryTypeId], [t].[Content], [t].[InsertTime], [t].[IsRemove], [t].[PostDescription], [t].[RemoveTime], [t].[TimeRequired], [t].[Titel], [t].[UpdateTime], [t].[UserId], [t].[VisitCount], [t0].[Id], [p0].[Id], [p0].[InsertTime], [p0].[IsRemove], [p0].[PostId], [p0].[RemoveTime], [p0].[Src], [p0].[UpdateTime], [t0].[InsertTime], [t0].[IsRemove], [t0].[ParentTypeId], [t0].[RemoveTime], [t0].[Type], [t0].[UpdateTime]\r\nFROM (\r\n    SELECT [p].[Id], [p].[CategoryTypeId], [p].[Content], [p].[InsertTime], [p].[IsRemove], [p].[PostDescription], [p].[RemoveTime], [p].[TimeRequired], [p].[Titel], [p].[UpdateTime], [p].[UserId], [p].[VisitCount]\r\n    FROM [Posts] AS [p]\r\n    WHERE [p].[IsRemove] = CAST(0 AS bit)\r\n    ORDER BY (SELECT 1)\r\n    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY\r\n) AS [t]\r\nINNER JOIN (\r\n    SELECT [c].[Id], [c].[InsertTime], [c].[IsRemove], [c].[ParentTypeId], [c].[RemoveTime], [c].[Type], [c].[UpdateTime]\r\n    FROM [CategoryTypes] AS [c]\r\n    WHERE [c].[IsRemove] = CAST(0 AS bit)\r\n) AS [t0] ON [t].[CategoryTypeId] = [t0].[Id]\r\nLEFT JOIN [PostImage] AS [p0] ON [t].[Id] = [p0].[PostId]\r\nORDER BY [t].[Id], [t0].[Id]", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed action method WebApi.Controllers.PostController.Get (WebApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1250.9706ms.", "level": "Info", "time": "2024-10-30 09:05:57.4794", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker+Log.ActionMethodExecuted", "eventPropertise": { "ActionName": "WebApi.Controllers.PostController.Get (WebApi)", "ActionResult": "Microsoft.AspNetCore.Mvc.OkObjectResult", "ElapsedMilliseconds": 1250.9706, "EventId": 103, "EventName": "ActionMethodExecuted" } }
{ "message": "Executing OkObjectResult, writing value of type 'Application.Dtos.PaginatedItemsDto`1[[Application.Posts.GetPostPLP.Dto.PostPLPDto, Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "level": "Info", "time": "2024-10-30 09:05:57.4794", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor+Log.ObjectResultExecuting", "eventPropertise": { "ObjectResultType": "OkObjectResult", "Type": "Application.Dtos.PaginatedItemsDto`1[[Application.Posts.GetPostPLP.Dto.PostPLPDto, Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" } }
{ "message": "Executed action WebApi.Controllers.PostController.Get (WebApi) in 1497.6962ms", "level": "Info", "time": "2024-10-30 09:05:57.5146", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker+Log.ExecutedAction", "eventPropertise": { "ActionName": "WebApi.Controllers.PostController.Get (WebApi)", "ElapsedMilliseconds": 1497.6962, "EventId": 105, "EventName": "ActionExecuted" } }
{ "message": "Executed endpoint 'WebApi.Controllers.PostController.Get (WebApi)'", "level": "Info", "time": "2024-10-30 09:05:57.5146", "callsite": "Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke", "eventPropertise": { "EndpointName": {"Order":0, "RoutePattern":{"Defaults":{"action":"Get","controller":"Post"}, "ParameterPolicies":{}, "RequiredValues":{"action":"Get", "controller":"Post"}, "InboundPrecedence":1.1, "OutboundPrecedence":5.5, "RawText":"api/Post", "Parameters":[], "PathSegments":[{"IsSimple":true, "Parts":[{"Content":"api", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]},{"IsSimple":true, "Parts":[{"Content":"Post", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]}]}, "DisplayName":"WebApi.Controllers.PostController.Get (WebApi)", "Metadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Authorization.AuthorizeAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["GET"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpGetAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["GET"]},{"ControllerName":"Post", "ActionName":"Get", "MethodInfo":"Microsoft.AspNetCore.Mvc.IActionResult Get(Application.Posts.GetPostPLP.Dto.PostPLPRequestDto)", "ControllerTypeInfo":"WebApi.Controllers.PostController", "DisplayName":"WebApi.Controllers.PostController.Get (WebApi)", "Id":"152b8676-413c-433c-a78c-0bdf55aafda5", "RouteValues":{"action":"Get","controller":"Post"}, "AttributeRouteInfo":{"Template":"api/Post", "Order":0, "SuppressLinkGeneration":false, "SuppressPathMatching":false}, "ActionConstraints":[{"HttpMethods":["GET"], "Order":100}], "EndpointMetadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Authorization.AuthorizeAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["GET"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpGetAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["GET"]}], "Parameters":[{"ParameterInfo":{"ParameterType":"Application.Posts.GetPostPLP.Dto.PostPLPRequestDto", "Name":"requestDto", "HasDefaultValue":false, "DefaultValue":"", "RawDefaultValue":"", "MetadataToken":134217763, "Attributes":"None", "Member":"Microsoft.AspNetCore.Mvc.IActionResult Get(Application.Posts.GetPostPLP.Dto.PostPLPRequestDto)", "Position":0, "IsIn":false, "IsLcid":false, "IsOptional":false, "IsOut":false, "IsRetval":false, "CustomAttributes":[{"Constructor":"Void .ctor()", "ConstructorArguments":[], "NamedArguments":[], "AttributeType":"Microsoft.AspNetCore.Mvc.FromQueryAttribute"}]}, "Name":"requestDto", "ParameterType":"Application.Posts.GetPostPLP.Dto.PostPLPRequestDto", "BindingInfo":{"BindingSource":{"DisplayName":"Query", "Id":"Query", "IsGreedy":false, "IsFromRequest":true}, "EmptyBodyBehavior":"Default"}}], "BoundProperties":[], "FilterDescriptors":[{"Filter":{"Order":-3000}, "Order":-3000, "Scope":10},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"}, "Order":0, "Scope":20}], "Properties":{"Microsoft.AspNetCore.Mvc.ApiDescriptionActionData":{},"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute":{"Type":"Microsoft.AspNetCore.Mvc.ProblemDetails", "TypeId":"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute"}}},{},{"Order":-3000},{"Order":-2000, "IsReusable":true},{"Order":-2000, "IsReusable":true},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"HttpMethods":["GET"], "Order":100}], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/api/Post - - - 200 - application/json;+charset=utf-8 1819.0780ms", "level": "Info", "time": "2024-10-30 09:05:57.5146", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 1819.078, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Post", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/api/Post/2 - -", "level": "Info", "time": "2024-10-30 09:07:11.2521", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Post/2", "QueryString": "", "EventId": 1 } }
{ "message": "Executed DbCommand (20ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[Id] = @__p_0", "level": "Info", "time": "2024-10-30 09:07:11.2822", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "20", "parameters": "@__p_0='?' (Size = 450)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[Id] = @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executing endpoint 'WebApi.Controllers.PostController.Get (WebApi)'", "level": "Info", "time": "2024-10-30 09:07:11.2822", "callsite": "Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke", "eventPropertise": { "EndpointName": {"Order":0, "RoutePattern":{"Defaults":{"action":"Get","controller":"Post"}, "ParameterPolicies":{}, "RequiredValues":{"action":"Get", "controller":"Post"}, "InboundPrecedence":1.13, "OutboundPrecedence":5.53, "RawText":"api/Post/{id}", "Parameters":[{"ParameterPolicies":[], "EncodeSlashes":true, "IsCatchAll":false, "IsOptional":false, "ParameterKind":"Standard", "Name":"id", "PartKind":"Parameter", "IsLiteral":false, "IsParameter":true, "IsSeparator":false}], "PathSegments":[{"IsSimple":true, "Parts":[{"Content":"api", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]},{"IsSimple":true, "Parts":[{"Content":"Post", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]},{"IsSimple":true, "Parts":[{"ParameterPolicies":[], "EncodeSlashes":true, "IsCatchAll":false, "IsOptional":false, "ParameterKind":"Standard", "Name":"id", "PartKind":"Parameter", "IsLiteral":false, "IsParameter":true, "IsSeparator":false}]}]}, "DisplayName":"WebApi.Controllers.PostController.Get (WebApi)", "Metadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Authorization.AuthorizeAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["GET"], "Template":"{id}", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpGetAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["GET"]},{"ControllerName":"Post", "ActionName":"Get", "MethodInfo":"Microsoft.AspNetCore.Mvc.IActionResult Get(Int32)", "ControllerTypeInfo":"WebApi.Controllers.PostController", "DisplayName":"WebApi.Controllers.PostController.Get (WebApi)", "Id":"f8d10ea0-9945-4c47-b2fc-f919382c5a0a", "RouteValues":{"action":"Get","controller":"Post"}, "AttributeRouteInfo":{"Template":"api/Post/{id}", "Order":0, "SuppressLinkGeneration":false, "SuppressPathMatching":false}, "ActionConstraints":[{"HttpMethods":["GET"], "Order":100}], "EndpointMetadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Authorization.AuthorizeAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["GET"], "Template":"{id}", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpGetAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["GET"]}], "Parameters":[{"ParameterInfo":{"ParameterType":"System.Int32", "Name":"id", "HasDefaultValue":false, "DefaultValue":"", "RawDefaultValue":"", "MetadataToken":134217764, "Attributes":"None", "Member":"Microsoft.AspNetCore.Mvc.IActionResult Get(Int32)", "Position":0, "IsIn":false, "IsLcid":false, "IsOptional":false, "IsOut":false, "IsRetval":false, "CustomAttributes":[]}, "Name":"id", "ParameterType":"System.Int32", "BindingInfo":{"BindingSource":{"DisplayName":"Path", "Id":"Path", "IsGreedy":false, "IsFromRequest":true}, "EmptyBodyBehavior":"Default"}}], "BoundProperties":[], "FilterDescriptors":[{"Filter":{"Order":-3000}, "Order":-3000, "Scope":10},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"}, "Order":0, "Scope":20}], "Properties":{"Microsoft.AspNetCore.Mvc.ApiDescriptionActionData":{},"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute":{"Type":"Microsoft.AspNetCore.Mvc.ProblemDetails", "TypeId":"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute"}}},{},{"Order":-3000},{"Order":-2000, "IsReusable":true},{"Order":-2000, "IsReusable":true},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"HttpMethods":["GET"], "Order":100}], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} } }
{ "message": "Route matched with {action = \"Get\", controller = \"Post\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Get(Int32) on controller WebApi.Controllers.PostController (WebApi).", "level": "Info", "time": "2024-10-30 09:07:11.3178", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker+Log.ExecutingAction", "eventPropertise": { "RouteData": "{action = \"Get\", controller = \"Post\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Get(Int32)", "Controller": "WebApi.Controllers.PostController", "AssemblyName": "WebApi", "EventId": 102, "EventName": "ControllerActionExecuting" } }
{ "message": "Executing action method WebApi.Controllers.PostController.Get (WebApi) - Validation state: Valid", "level": "Info", "time": "2024-10-30 09:07:11.3975", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker+Log.ActionMethodExecuting", "eventPropertise": { "ActionName": "WebApi.Controllers.PostController.Get (WebApi)", "ValidationState": "Valid", "EventId": 101, "EventName": "ActionMethodExecuting" } }
{ "message": "Executed DbCommand (11ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT [t0].[Id], [t0].[CategoryTypeId], [t0].[Content], [t0].[InsertTime], [t0].[IsRemove], [t0].[PostDescription], [t0].[RemoveTime], [t0].[TimeRequired], [t0].[Titel], [t0].[UpdateTime], [t0].[UserId], [t0].[VisitCount], [t0].[Id0], [t0].[InsertTime0], [t0].[IsRemove0], [t0].[ParentTypeId], [t0].[RemoveTime0], [t0].[Type], [t0].[UpdateTime0], [p0].[Id], [p0].[InsertTime], [p0].[IsRemove], [p0].[PostId], [p0].[RemoveTime], [p0].[Src], [p0].[UpdateTime]\r\nFROM (\r\n    SELECT TOP(2) [p].[Id], [p].[CategoryTypeId], [p].[Content], [p].[InsertTime], [p].[IsRemove], [p].[PostDescription], [p].[RemoveTime], [p].[TimeRequired], [p].[Titel], [p].[UpdateTime], [p].[UserId], [p].[VisitCount], [t].[Id] AS [Id0], [t].[InsertTime] AS [InsertTime0], [t].[IsRemove] AS [IsRemove0], [t].[ParentTypeId], [t].[RemoveTime] AS [RemoveTime0], [t].[Type], [t].[UpdateTime] AS [UpdateTime0]\r\n    FROM [Posts] AS [p]\r\n    INNER JOIN (\r\n        SELECT [c].[Id], [c].[InsertTime], [c].[IsRemove], [c].[ParentTypeId], [c].[RemoveTime], [c].[Type], [c].[UpdateTime]\r\n        FROM [CategoryTypes] AS [c]\r\n        WHERE [c].[IsRemove] = CAST(0 AS bit)\r\n    ) AS [t] ON [p].[CategoryTypeId] = [t].[Id]\r\n    WHERE [p].[IsRemove] = CAST(0 AS bit) AND [p].[Id] = @__Id_0\r\n) AS [t0]\r\nLEFT JOIN [PostImage] AS [p0] ON [t0].[Id] = [p0].[PostId]\r\nORDER BY [t0].[Id], [t0].[Id0]", "level": "Info", "time": "2024-10-30 09:07:11.4407", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "11", "parameters": "@__Id_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT [t0].[Id], [t0].[CategoryTypeId], [t0].[Content], [t0].[InsertTime], [t0].[IsRemove], [t0].[PostDescription], [t0].[RemoveTime], [t0].[TimeRequired], [t0].[Titel], [t0].[UpdateTime], [t0].[UserId], [t0].[VisitCount], [t0].[Id0], [t0].[InsertTime0], [t0].[IsRemove0], [t0].[ParentTypeId], [t0].[RemoveTime0], [t0].[Type], [t0].[UpdateTime0], [p0].[Id], [p0].[InsertTime], [p0].[IsRemove], [p0].[PostId], [p0].[RemoveTime], [p0].[Src], [p0].[UpdateTime]\r\nFROM (\r\n    SELECT TOP(2) [p].[Id], [p].[CategoryTypeId], [p].[Content], [p].[InsertTime], [p].[IsRemove], [p].[PostDescription], [p].[RemoveTime], [p].[TimeRequired], [p].[Titel], [p].[UpdateTime], [p].[UserId], [p].[VisitCount], [t].[Id] AS [Id0], [t].[InsertTime] AS [InsertTime0], [t].[IsRemove] AS [IsRemove0], [t].[ParentTypeId], [t].[RemoveTime] AS [RemoveTime0], [t].[Type], [t].[UpdateTime] AS [UpdateTime0]\r\n    FROM [Posts] AS [p]\r\n    INNER JOIN (\r\n        SELECT [c].[Id], [c].[InsertTime], [c].[IsRemove], [c].[ParentTypeId], [c].[RemoveTime], [c].[Type], [c].[UpdateTime]\r\n        FROM [CategoryTypes] AS [c]\r\n        WHERE [c].[IsRemove] = CAST(0 AS bit)\r\n    ) AS [t] ON [p].[CategoryTypeId] = [t].[Id]\r\n    WHERE [p].[IsRemove] = CAST(0 AS bit) AND [p].[Id] = @__Id_0\r\n) AS [t0]\r\nLEFT JOIN [PostImage] AS [p0] ON [t0].[Id] = [p0].[PostId]\r\nORDER BY [t0].[Id], [t0].[Id0]", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (18ms) [Parameters=[@__post_UserId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[Id] = @__post_UserId_0", "level": "Info", "time": "2024-10-30 09:07:11.4748", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "18", "parameters": "@__post_UserId_0='?' (Size = 450)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[Id] = @__post_UserId_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (7ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nUPDATE [Posts] SET [UpdateTime] = @p0, [VisitCount] = @p1\r\nOUTPUT 1\r\nWHERE [Id] = @p2;", "level": "Info", "time": "2024-10-30 09:07:12.0474", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "7", "parameters": "@p2='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nUPDATE [Posts] SET [UpdateTime] = @p0, [VisitCount] = @p1\r\nOUTPUT 1\r\nWHERE [Id] = @p2;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "level": "Warn", "time": "2024-10-30 09:07:12.0697", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition.Log", "eventPropertise": { "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" } }
{ "message": "Executed DbCommand (9ms) [Parameters=[@__p_1='?' (DbType = Int32), @__post_CategoryTypeId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(@__p_1) [p].[Id], [p].[Titel], [p].[TimeRequired], (\r\n    SELECT TOP(1) [p0].[Src]\r\n    FROM [PostImage] AS [p0]\r\n    WHERE [p].[Id] = [p0].[PostId])\r\nFROM [Posts] AS [p]\r\nWHERE [p].[IsRemove] = CAST(0 AS bit) AND [p].[CategoryTypeId] = @__post_CategoryTypeId_0", "level": "Info", "time": "2024-10-30 09:07:12.1181", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "9", "parameters": "@__p_1='?' (DbType = Int32), @__post_CategoryTypeId_0='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(@__p_1) [p].[Id], [p].[Titel], [p].[TimeRequired], (\r\n    SELECT TOP(1) [p0].[Src]\r\n    FROM [PostImage] AS [p0]\r\n    WHERE [p].[Id] = [p0].[PostId])\r\nFROM [Posts] AS [p]\r\nWHERE [p].[IsRemove] = CAST(0 AS bit) AND [p].[CategoryTypeId] = @__post_CategoryTypeId_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed action method WebApi.Controllers.PostController.Get (WebApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 724.2091ms.", "level": "Info", "time": "2024-10-30 09:07:12.1181", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker+Log.ActionMethodExecuted", "eventPropertise": { "ActionName": "WebApi.Controllers.PostController.Get (WebApi)", "ActionResult": "Microsoft.AspNetCore.Mvc.OkObjectResult", "ElapsedMilliseconds": 724.2091, "EventId": 103, "EventName": "ActionMethodExecuted" } }
{ "message": "Executing OkObjectResult, writing value of type 'Application.Posts.GetPostPDP.Dto.PostPDPDto'.", "level": "Info", "time": "2024-10-30 09:07:12.1237", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor+Log.ObjectResultExecuting", "eventPropertise": { "ObjectResultType": "OkObjectResult", "Type": "Application.Posts.GetPostPDP.Dto.PostPDPDto", "EventId": 1, "EventName": "ObjectResultExecuting" } }
{ "message": "Executed action WebApi.Controllers.PostController.Get (WebApi) in 828.8631ms", "level": "Info", "time": "2024-10-30 09:07:12.1476", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker+Log.ExecutedAction", "eventPropertise": { "ActionName": "WebApi.Controllers.PostController.Get (WebApi)", "ElapsedMilliseconds": 828.8631, "EventId": 105, "EventName": "ActionExecuted" } }
{ "message": "Executed endpoint 'WebApi.Controllers.PostController.Get (WebApi)'", "level": "Info", "time": "2024-10-30 09:07:12.1476", "callsite": "Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke", "eventPropertise": { "EndpointName": {"Order":0, "RoutePattern":{"Defaults":{"action":"Get","controller":"Post"}, "ParameterPolicies":{}, "RequiredValues":{"action":"Get", "controller":"Post"}, "InboundPrecedence":1.13, "OutboundPrecedence":5.53, "RawText":"api/Post/{id}", "Parameters":[{"ParameterPolicies":[], "EncodeSlashes":true, "IsCatchAll":false, "IsOptional":false, "ParameterKind":"Standard", "Name":"id", "PartKind":"Parameter", "IsLiteral":false, "IsParameter":true, "IsSeparator":false}], "PathSegments":[{"IsSimple":true, "Parts":[{"Content":"api", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]},{"IsSimple":true, "Parts":[{"Content":"Post", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]},{"IsSimple":true, "Parts":[{"ParameterPolicies":[], "EncodeSlashes":true, "IsCatchAll":false, "IsOptional":false, "ParameterKind":"Standard", "Name":"id", "PartKind":"Parameter", "IsLiteral":false, "IsParameter":true, "IsSeparator":false}]}]}, "DisplayName":"WebApi.Controllers.PostController.Get (WebApi)", "Metadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Authorization.AuthorizeAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["GET"], "Template":"{id}", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpGetAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["GET"]},{"ControllerName":"Post", "ActionName":"Get", "MethodInfo":"Microsoft.AspNetCore.Mvc.IActionResult Get(Int32)", "ControllerTypeInfo":"WebApi.Controllers.PostController", "DisplayName":"WebApi.Controllers.PostController.Get (WebApi)", "Id":"f8d10ea0-9945-4c47-b2fc-f919382c5a0a", "RouteValues":{"action":"Get","controller":"Post"}, "AttributeRouteInfo":{"Template":"api/Post/{id}", "Order":0, "SuppressLinkGeneration":false, "SuppressPathMatching":false}, "ActionConstraints":[{"HttpMethods":["GET"], "Order":100}], "EndpointMetadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Authorization.AuthorizeAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["GET"], "Template":"{id}", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpGetAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["GET"]}], "Parameters":[{"ParameterInfo":{"ParameterType":"System.Int32", "Name":"id", "HasDefaultValue":false, "DefaultValue":"", "RawDefaultValue":"", "MetadataToken":134217764, "Attributes":"None", "Member":"Microsoft.AspNetCore.Mvc.IActionResult Get(Int32)", "Position":0, "IsIn":false, "IsLcid":false, "IsOptional":false, "IsOut":false, "IsRetval":false, "CustomAttributes":[]}, "Name":"id", "ParameterType":"System.Int32", "BindingInfo":{"BindingSource":{"DisplayName":"Path", "Id":"Path", "IsGreedy":false, "IsFromRequest":true}, "EmptyBodyBehavior":"Default"}}], "BoundProperties":[], "FilterDescriptors":[{"Filter":{"Order":-3000}, "Order":-3000, "Scope":10},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"}, "Order":0, "Scope":20}], "Properties":{"Microsoft.AspNetCore.Mvc.ApiDescriptionActionData":{},"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute":{"Type":"Microsoft.AspNetCore.Mvc.ProblemDetails", "TypeId":"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute"}}},{},{"Order":-3000},{"Order":-2000, "IsReusable":true},{"Order":-2000, "IsReusable":true},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"HttpMethods":["GET"], "Order":100}], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/api/Post/2 - - - 200 - application/json;+charset=utf-8 897.9699ms", "level": "Info", "time": "2024-10-30 09:07:12.1476", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 897.9699, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Post/2", "QueryString": "", "EventId": 2 } }
{ "message": "User profile is available. Using 'C:\\Users\\Ebrahim\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "level": "Info", "time": "2024-10-30 14:31:11.7053", "callsite": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.GetFallbackKeyRepositoryEncryptorPair", "eventPropertise": { "FullName": "C:\\Users\\Ebrahim\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" } }
{ "message": "Application started. Press Ctrl+C to shut down.", "level": "Info", "time": "2024-10-30 14:31:13.4181", "callsite": "Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.OnApplicationStarted" }
{ "message": "Hosting environment: Development", "level": "Info", "time": "2024-10-30 14:31:13.4648", "callsite": "Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.OnApplicationStarted", "eventPropertise": { "EnvName": "Development" } }
{ "message": "Content root path: E:\\Program\\Web\\Asp.Net core\\Projject\\News\\NewsWebSite-Test\\WebApi", "level": "Info", "time": "2024-10-30 14:31:13.4648", "callsite": "Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.NotifyStarted", "eventPropertise": { "ContentRoot": "E:\\Program\\Web\\Asp.Net core\\Projject\\News\\NewsWebSite-Test\\WebApi" } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger - -", "level": "Info", "time": "2024-10-30 14:31:13.9345", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger - - - 301 - - 579.2846ms", "level": "Info", "time": "2024-10-30 14:31:14.4980", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 579.2846, "StatusCode": 301, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/index.html - -", "level": "Info", "time": "2024-10-30 14:31:14.5590", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/index.html - - - 200 - text/html;charset=utf-8 3103.7308ms", "level": "Info", "time": "2024-10-30 14:31:17.6628", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 3103.7308, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/swagger-ui-bundle.js - -", "level": "Info", "time": "2024-10-30 14:31:17.7204", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 1 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/swagger-ui-standalone-preset.js - -", "level": "Info", "time": "2024-10-30 14:31:17.7204", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 1 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/_framework/aspnetcore-browser-refresh.js - -", "level": "Info", "time": "2024-10-30 14:31:18.1001", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 } }
{ "message": "Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 14:31:18.1001", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/swagger-ui-standalone-preset.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/swagger-ui.css - -", "level": "Info", "time": "2024-10-30 14:31:18.1211", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/_framework/aspnetcore-browser-refresh.js - - - 200 11981 application/javascript;+charset=utf-8 27.5814ms", "level": "Info", "time": "2024-10-30 14:31:18.1211", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 27.5814, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 11981, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 } }
{ "message": "Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 14:31:18.1414", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/swagger-ui.css", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 14:31:18.3951", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/swagger-ui-bundle.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/swagger-ui.css - - - 200 143943 text/css 282.6256ms", "level": "Info", "time": "2024-10-30 14:31:18.4038", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 282.6256, "StatusCode": 200, "ContentType": "text/css", "ContentLength": 143943, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 2 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/swagger-ui-standalone-preset.js - - - 200 339486 text/javascript 834.2532ms", "level": "Info", "time": "2024-10-30 14:31:18.5580", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 834.2532, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 339486, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 2 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/swagger-ui-bundle.js - - - 200 1096145 text/javascript 1105.2417ms", "level": "Info", "time": "2024-10-30 14:31:18.8257", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 1105.2417, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 1096145, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/v1/swagger.json - -", "level": "Info", "time": "2024-10-30 14:31:19.2653", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/favicon-32x32.png - -", "level": "Info", "time": "2024-10-30 14:31:19.2709", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 1 } }
{ "message": "Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 14:31:19.3015", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/favicon-32x32.png", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/favicon-32x32.png - - - 200 628 image/png 31.1110ms", "level": "Info", "time": "2024-10-30 14:31:19.3015", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 31.111, "StatusCode": 200, "ContentType": "image/png", "ContentLength": 628, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 2 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 726.8186ms", "level": "Info", "time": "2024-10-30 14:31:19.9922", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 726.8186, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 } }
{ "message": "User profile is available. Using 'C:\\Users\\Ebrahim\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.", "level": "Info", "time": "2024-10-30 14:43:00.6992", "callsite": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.GetFallbackKeyRepositoryEncryptorPair", "eventPropertise": { "FullName": "C:\\Users\\Ebrahim\\AppData\\Local\\ASP.NET\\DataProtection-Keys", "EventId": 63, "EventName": "UsingProfileAsKeyRepositoryWithDPAPI" } }
{ "message": "Application started. Press Ctrl+C to shut down.", "level": "Info", "time": "2024-10-30 14:43:01.0650", "callsite": "Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.OnApplicationStarted" }
{ "message": "Hosting environment: Development", "level": "Info", "time": "2024-10-30 14:43:01.0650", "callsite": "Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.OnApplicationStarted", "eventPropertise": { "EnvName": "Development" } }
{ "message": "Content root path: E:\\Program\\Web\\Asp.Net core\\Projject\\News\\NewsWebSite-Test\\WebApi", "level": "Info", "time": "2024-10-30 14:43:01.0650", "callsite": "Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.NotifyStarted", "eventPropertise": { "ContentRoot": "E:\\Program\\Web\\Asp.Net core\\Projject\\News\\NewsWebSite-Test\\WebApi" } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger - -", "level": "Info", "time": "2024-10-30 14:43:01.1411", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger", "QueryString": "", "EventId": 1 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/index.html - -", "level": "Info", "time": "2024-10-30 14:43:01.3649", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger - - - 301 - - 215.3409ms", "level": "Info", "time": "2024-10-30 14:43:01.3649", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 215.3409, "StatusCode": 301, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger", "QueryString": "", "EventId": 2 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/index.html - - - 200 - text/html;charset=utf-8 375.9671ms", "level": "Info", "time": "2024-10-30 14:43:01.7410", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 375.9671, "StatusCode": 200, "ContentType": "text/html;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/index.html", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/swagger-ui.css - -", "level": "Info", "time": "2024-10-30 14:43:01.7783", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 1 } }
{ "message": "Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 14:43:01.8076", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/swagger-ui.css", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/swagger-ui.css - - - 200 143943 text/css 40.6853ms", "level": "Info", "time": "2024-10-30 14:43:01.8192", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 40.6853, "StatusCode": 200, "ContentType": "text/css", "ContentLength": 143943, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui.css", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/swagger-ui-standalone-preset.js - -", "level": "Info", "time": "2024-10-30 14:43:01.8355", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 1 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/swagger-ui-bundle.js - -", "level": "Info", "time": "2024-10-30 14:43:01.8355", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 1 } }
{ "message": "Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 14:43:01.8355", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/swagger-ui-standalone-preset.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 14:43:01.8603", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/swagger-ui-bundle.js", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/swagger-ui-standalone-preset.js - - - 200 339486 text/javascript 42.0158ms", "level": "Info", "time": "2024-10-30 14:43:01.8785", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 42.0158, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 339486, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-standalone-preset.js", "QueryString": "", "EventId": 2 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/swagger-ui-bundle.js - - - 200 1096145 text/javascript 203.2578ms", "level": "Info", "time": "2024-10-30 14:43:02.0388", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 203.2578, "StatusCode": 200, "ContentType": "text/javascript", "ContentLength": 1096145, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/swagger-ui-bundle.js", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/_framework/aspnetcore-browser-refresh.js - -", "level": "Info", "time": "2024-10-30 14:43:02.0618", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/_framework/aspnetcore-browser-refresh.js - - - 200 11981 application/javascript;+charset=utf-8 5.1239ms", "level": "Info", "time": "2024-10-30 14:43:02.0618", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 5.1239, "StatusCode": 200, "ContentType": "application/javascript; charset=utf-8", "ContentLength": 11981, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_framework/aspnetcore-browser-refresh.js", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/_vs/browserLink - -", "level": "Info", "time": "2024-10-30 14:43:02.1641", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 1 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 90.0836ms", "level": "Info", "time": "2024-10-30 14:43:02.2541", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 90.0836, "StatusCode": 200, "ContentType": "text/javascript; charset=UTF-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/_vs/browserLink", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/v1/swagger.json - -", "level": "Info", "time": "2024-10-30 14:43:04.1073", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 1 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/swagger/favicon-32x32.png - -", "level": "Info", "time": "2024-10-30 14:43:04.2298", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 1 } }
{ "message": "Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'", "level": "Info", "time": "2024-10-30 14:43:04.2298", "callsite": "Microsoft.AspNetCore.StaticFiles.LoggerExtensions.FileServedCore", "eventPropertise": { "VirtualPath": "/favicon-32x32.png", "PhysicalPath": "N/A", "EventId": 2, "EventName": "FileServed" } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/favicon-32x32.png - - - 200 628 image/png 1.5412ms", "level": "Info", "time": "2024-10-30 14:43:04.2298", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 1.5412, "StatusCode": 200, "ContentType": "image/png", "ContentLength": 628, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/favicon-32x32.png", "QueryString": "", "EventId": 2 } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 391.5870ms", "level": "Info", "time": "2024-10-30 14:43:04.4989", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 391.587, "StatusCode": 200, "ContentType": "application/json;charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/swagger/v1/swagger.json", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/api/Post - -", "level": "Info", "time": "2024-10-30 14:58:21.0225", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Post", "QueryString": "", "EventId": 1 } }
{ "message": "Authorization failed. These requirements were not met:\r\nDenyAnonymousAuthorizationRequirement: Requires an authenticated user.", "level": "Info", "time": "2024-10-30 14:58:22.9641", "callsite": "Microsoft.AspNetCore.Authorization.DefaultAuthorizationService.AuthorizeAsync", "eventPropertise": { "Reason": "These requirements were not met:\r\nDenyAnonymousAuthorizationRequirement: Requires an authenticated user.", "EventId": 2, "EventName": "UserAuthorizationFailed" } }
{ "message": "AuthenticationScheme: Bearer was challenged.", "level": "Info", "time": "2024-10-30 14:58:22.9843", "callsite": "Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync", "eventPropertise": { "AuthenticationScheme": "Bearer", "EventId": 12, "EventName": "AuthenticationSchemeChallenged" } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/api/Post - - - 401 - - 1963.5517ms", "level": "Info", "time": "2024-10-30 14:58:22.9843", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 1963.5517, "StatusCode": 401, "ContentType": null, "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Post", "QueryString": "", "EventId": 2 } }
{ "message": "Request starting HTTP/2 POST https://localhost:44307/api/Account?email=asp00net%40gmail.com&password=As%40137455 - 0", "level": "Info", "time": "2024-10-30 14:58:45.9792", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "POST", "ContentType": null, "ContentLength": 0, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Account", "QueryString": "?email=asp00net%40gmail.com&password=As%40137455", "EventId": 1 } }
{ "message": "Executing endpoint 'WebApi.Controllers.AccountController.Post (WebApi)'", "level": "Info", "time": "2024-10-30 14:58:45.9933", "callsite": "Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke", "eventPropertise": { "EndpointName": {"Order":0, "RoutePattern":{"Defaults":{"action":"Post","controller":"Account"}, "ParameterPolicies":{}, "RequiredValues":{"action":"Post", "controller":"Account"}, "InboundPrecedence":1.1, "OutboundPrecedence":5.5, "RawText":"api/Account", "Parameters":[], "PathSegments":[{"IsSimple":true, "Parts":[{"Content":"api", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]},{"IsSimple":true, "Parts":[{"Content":"Account", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]}]}, "DisplayName":"WebApi.Controllers.AccountController.Post (WebApi)", "Metadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["POST"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpPostAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["POST"]},{"ControllerName":"Account", "ActionName":"Post", "MethodInfo":"Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String)", "ControllerTypeInfo":"WebApi.Controllers.AccountController", "DisplayName":"WebApi.Controllers.AccountController.Post (WebApi)", "Id":"82e22898-0856-4a78-acb8-7ed8bee0c915", "RouteValues":{"action":"Post","controller":"Account"}, "AttributeRouteInfo":{"Template":"api/Account", "Order":0, "SuppressLinkGeneration":false, "SuppressPathMatching":false}, "ActionConstraints":[{"HttpMethods":["POST"], "Order":100}], "EndpointMetadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["POST"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpPostAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["POST"]}], "Parameters":[{"ParameterInfo":{"ParameterType":"System.String", "Name":"email", "HasDefaultValue":false, "DefaultValue":"", "RawDefaultValue":"", "MetadataToken":134217747, "Attributes":"None", "Member":"Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String)", "Position":0, "IsIn":false, "IsLcid":false, "IsOptional":false, "IsOut":false, "IsRetval":false, "CustomAttributes":[]}, "Name":"email", "ParameterType":"System.String", "BindingInfo":{"BindingSource":{"DisplayName":"Query", "Id":"Query", "IsGreedy":false, "IsFromRequest":true}, "EmptyBodyBehavior":"Default"}},{"ParameterInfo":{"ParameterType":"System.String", "Name":"password", "HasDefaultValue":false, "DefaultValue":"", "RawDefaultValue":"", "MetadataToken":134217748, "Attributes":"None", "Member":"Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String)", "Position":1, "IsIn":false, "IsLcid":false, "IsOptional":false, "IsOut":false, "IsRetval":false, "CustomAttributes":[]}, "Name":"password", "ParameterType":"System.String", "BindingInfo":{"BindingSource":{"DisplayName":"Query", "Id":"Query", "IsGreedy":false, "IsFromRequest":true}, "EmptyBodyBehavior":"Default"}}], "BoundProperties":[], "FilterDescriptors":[{"Filter":{"Order":-3000}, "Order":-3000, "Scope":10},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"}, "Order":0, "Scope":20}], "Properties":{"Microsoft.AspNetCore.Mvc.ApiDescriptionActionData":{},"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute":{"Type":"Microsoft.AspNetCore.Mvc.ProblemDetails", "TypeId":"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute"}}},{},{"Order":-3000},{"Order":-2000, "IsReusable":true},{"Order":-2000, "IsReusable":true},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"HttpMethods":["POST"], "Order":100}], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} } }
{ "message": "Route matched with {action = \"Post\", controller = \"Account\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String) on controller WebApi.Controllers.AccountController (WebApi).", "level": "Info", "time": "2024-10-30 14:58:46.1141", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker+Log.ExecutingAction", "eventPropertise": { "RouteData": "{action = \"Post\", controller = \"Account\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String)", "Controller": "WebApi.Controllers.AccountController", "AssemblyName": "WebApi", "EventId": 102, "EventName": "ControllerActionExecuting" } }
{ "message": "Executing action method WebApi.Controllers.AccountController.Post (WebApi) - Validation state: Valid", "level": "Info", "time": "2024-10-30 14:58:48.4567", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker+Log.ActionMethodExecuting", "eventPropertise": { "ActionName": "WebApi.Controllers.AccountController.Post (WebApi)", "ValidationState": "Valid", "EventId": 101, "EventName": "ActionMethodExecuting" } }
{ "message": "Post method called with email: \"asp00net@gmail.com\"", "level": "Info", "time": "2024-10-30 14:58:48.4835", "callsite": "WebApi.Controllers.AccountController.Post", "eventPropertise": { "Email": "asp00net@gmail.com" } }
{ "message": "Executed DbCommand (297ms) [Parameters=[@__normalizedUserName_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedUserName] = @__normalizedUserName_0", "level": "Info", "time": "2024-10-30 14:58:53.1280", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "297", "parameters": "@__normalizedUserName_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedUserName] = @__normalizedUserName_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (58ms) [Parameters=[@__user_Id_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT [u].[Id], [u].[ClaimType], [u].[ClaimValue], [u].[UserId]\r\nFROM [identity].[UserClaims] AS [u]\r\nWHERE [u].[UserId] = @__user_Id_0", "level": "Info", "time": "2024-10-30 14:58:53.8384", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "58", "parameters": "@__user_Id_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT [u].[Id], [u].[ClaimType], [u].[ClaimValue], [u].[UserId]\r\nFROM [identity].[UserClaims] AS [u]\r\nWHERE [u].[UserId] = @__user_Id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']\r\nSELECT [t].[Name]\r\nFROM [identity].[UserRoles] AS [u]\r\nINNER JOIN (\r\n    SELECT [r].[Id], [r].[Name]\r\n    FROM [identity].[Roles] AS [r]\r\n    WHERE [r].[Discriminator] = N'Role'\r\n) AS [t] ON [u].[RoleId] = [t].[Id]\r\nWHERE [u].[UserId] = @__userId_0", "level": "Info", "time": "2024-10-30 14:58:53.9208", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "8", "parameters": "@__userId_0='?' (Size = 450)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT [t].[Name]\r\nFROM [identity].[UserRoles] AS [u]\r\nINNER JOIN (\r\n    SELECT [r].[Id], [r].[Name]\r\n    FROM [identity].[Roles] AS [r]\r\n    WHERE [r].[Discriminator] = N'Role'\r\n) AS [t] ON [u].[RoleId] = [t].[Id]\r\nWHERE [u].[UserId] = @__userId_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (7ms) [Parameters=[@__normalizedName_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Discriminator], [r].[Name], [r].[NormalizedName], [r].[Description]\r\nFROM [identity].[Roles] AS [r]\r\nWHERE [r].[Discriminator] = N'Role' AND [r].[NormalizedName] = @__normalizedName_0", "level": "Info", "time": "2024-10-30 14:58:53.9423", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "7", "parameters": "@__normalizedName_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Discriminator], [r].[Name], [r].[NormalizedName], [r].[Description]\r\nFROM [identity].[Roles] AS [r]\r\nWHERE [r].[Discriminator] = N'Role' AND [r].[NormalizedName] = @__normalizedName_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (3ms) [Parameters=[@__role_Id_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT [r].[ClaimType], [r].[ClaimValue]\r\nFROM [identity].[RoleClaims] AS [r]\r\nWHERE [r].[RoleId] = @__role_Id_0", "level": "Info", "time": "2024-10-30 14:58:53.9957", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "3", "parameters": "@__role_Id_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT [r].[ClaimType], [r].[ClaimValue]\r\nFROM [identity].[RoleClaims] AS [r]\r\nWHERE [r].[RoleId] = @__role_Id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (15ms) [Parameters=[@__normalizedName_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Discriminator], [r].[Name], [r].[NormalizedName], [r].[Description]\r\nFROM [identity].[Roles] AS [r]\r\nWHERE [r].[Discriminator] = N'Role' AND [r].[NormalizedName] = @__normalizedName_0", "level": "Info", "time": "2024-10-30 14:58:54.0209", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "15", "parameters": "@__normalizedName_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Discriminator], [r].[Name], [r].[NormalizedName], [r].[Description]\r\nFROM [identity].[Roles] AS [r]\r\nWHERE [r].[Discriminator] = N'Role' AND [r].[NormalizedName] = @__normalizedName_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (1ms) [Parameters=[@__role_Id_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT [r].[ClaimType], [r].[ClaimValue]\r\nFROM [identity].[RoleClaims] AS [r]\r\nWHERE [r].[RoleId] = @__role_Id_0", "level": "Info", "time": "2024-10-30 14:58:54.0243", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "1", "parameters": "@__role_Id_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT [r].[ClaimType], [r].[ClaimValue]\r\nFROM [identity].[RoleClaims] AS [r]\r\nWHERE [r].[RoleId] = @__role_Id_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "AuthenticationScheme: Identity.Application signed in.", "level": "Info", "time": "2024-10-30 14:58:54.0573", "callsite": "Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.HandleSignInAsync", "eventPropertise": { "AuthenticationScheme": "Identity.Application", "EventId": 10, "EventName": "AuthenticationSchemeSignedIn" } }
{ "message": "User signed in successfully for email: \"asp00net@gmail.com\"", "level": "Info", "time": "2024-10-30 14:58:54.0573", "callsite": "WebApi.Controllers.AccountController.Post", "eventPropertise": { "Email": "asp00net@gmail.com" } }
{ "message": "Executed DbCommand (4ms) [Parameters=[@__normalizedEmail_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(2) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedEmail] = @__normalizedEmail_0", "level": "Info", "time": "2024-10-30 14:58:54.0818", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "4", "parameters": "@__normalizedEmail_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(2) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedEmail] = @__normalizedEmail_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450), @__p_1='?' (Size = 450), @__p_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [u].[UserId], [u].[LoginProvider], [u].[Name], [u].[Value]\r\nFROM [identity].[UserTokens] AS [u]\r\nWHERE [u].[UserId] = @__p_0 AND [u].[LoginProvider] = @__p_1 AND [u].[Name] = @__p_2", "level": "Info", "time": "2024-10-30 14:58:54.4479", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "3", "parameters": "@__p_0='?' (Size = 450), @__p_1='?' (Size = 450), @__p_2='?' (Size = 450)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(1) [u].[UserId], [u].[LoginProvider], [u].[Name], [u].[Value]\r\nFROM [identity].[UserTokens] AS [u]\r\nWHERE [u].[UserId] = @__p_0 AND [u].[LoginProvider] = @__p_1 AND [u].[Name] = @__p_2", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedUserName] = @__normalizedUserName_0", "level": "Info", "time": "2024-10-30 14:58:54.5014", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "5", "parameters": "@__normalizedUserName_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedUserName] = @__normalizedUserName_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (3ms) [Parameters=[@__normalizedEmail_0='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(2) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedEmail] = @__normalizedEmail_0", "level": "Info", "time": "2024-10-30 14:58:54.5180", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "3", "parameters": "@__normalizedEmail_0='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(2) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[NormalizedEmail] = @__normalizedEmail_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed DbCommand (28ms) [Parameters=[@p1='?' (Size = 450), @p2='?' (Size = 450), @p3='?' (Size = 450), @p0='?' (Size = 4000), @p19='?' (Size = 450), @p4='?' (DbType = Int32), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (Size = 4000), @p9='?' (DbType = Boolean), @p10='?' (DbType = DateTimeOffset), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 4000), @p17='?' (DbType = Boolean), @p18='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']\r\nSET NOCOUNT ON;\r\nUPDATE [identity].[UserTokens] SET [Value] = @p0\r\nOUTPUT 1\r\nWHERE [LoginProvider] = @p1 AND [Name] = @p2 AND [UserId] = @p3;\r\nUPDATE [identity].[Users] SET [AccessFailedCount] = @p4, [ConcurrencyStamp] = @p5, [Email] = @p6, [EmailConfirmed] = @p7, [FullName] = @p8, [LockoutEnabled] = @p9, [LockoutEnd] = @p10, [NormalizedEmail] = @p11, [NormalizedUserName] = @p12, [PasswordHash] = @p13, [PhoneNumber] = @p14, [PhoneNumberConfirmed] = @p15, [SecurityStamp] = @p16, [TwoFactorEnabled] = @p17, [UserName] = @p18\r\nOUTPUT 1\r\nWHERE [Id] = @p19;", "level": "Info", "time": "2024-10-30 14:58:54.8117", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "28", "parameters": "@p1='?' (Size = 450), @p2='?' (Size = 450), @p3='?' (Size = 450), @p0='?' (Size = 4000), @p19='?' (Size = 450), @p4='?' (DbType = Int32), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Boolean), @p8='?' (Size = 4000), @p9='?' (DbType = Boolean), @p10='?' (DbType = DateTimeOffset), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 4000), @p17='?' (DbType = Boolean), @p18='?' (Size = 4000)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SET NOCOUNT ON;\r\nUPDATE [identity].[UserTokens] SET [Value] = @p0\r\nOUTPUT 1\r\nWHERE [LoginProvider] = @p1 AND [Name] = @p2 AND [UserId] = @p3;\r\nUPDATE [identity].[Users] SET [AccessFailedCount] = @p4, [ConcurrencyStamp] = @p5, [Email] = @p6, [EmailConfirmed] = @p7, [FullName] = @p8, [LockoutEnabled] = @p9, [LockoutEnd] = @p10, [NormalizedEmail] = @p11, [NormalizedUserName] = @p12, [PasswordHash] = @p13, [PhoneNumber] = @p14, [PhoneNumberConfirmed] = @p15, [SecurityStamp] = @p16, [TwoFactorEnabled] = @p17, [UserName] = @p18\r\nOUTPUT 1\r\nWHERE [Id] = @p19;", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed action method WebApi.Controllers.AccountController.Post (WebApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 6414.8167ms.", "level": "Info", "time": "2024-10-30 14:58:54.8767", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker+Log.ActionMethodExecuted", "eventPropertise": { "ActionName": "WebApi.Controllers.AccountController.Post (WebApi)", "ActionResult": "Microsoft.AspNetCore.Mvc.OkObjectResult", "ElapsedMilliseconds": 6414.8167, "EventId": 103, "EventName": "ActionMethodExecuted" } }
{ "message": "Executing OkObjectResult, writing value of type 'WebApi.Model.LoginResultDto'.", "level": "Info", "time": "2024-10-30 14:58:54.8867", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor+Log.ObjectResultExecuting", "eventPropertise": { "ObjectResultType": "OkObjectResult", "Type": "WebApi.Model.LoginResultDto", "EventId": 1, "EventName": "ObjectResultExecuting" } }
{ "message": "Executed action WebApi.Controllers.AccountController.Post (WebApi) in 8778.768ms", "level": "Info", "time": "2024-10-30 14:58:54.8981", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker+Log.ExecutedAction", "eventPropertise": { "ActionName": "WebApi.Controllers.AccountController.Post (WebApi)", "ElapsedMilliseconds": 8778.768, "EventId": 105, "EventName": "ActionExecuted" } }
{ "message": "Executed endpoint 'WebApi.Controllers.AccountController.Post (WebApi)'", "level": "Info", "time": "2024-10-30 14:58:54.8981", "callsite": "Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke", "eventPropertise": { "EndpointName": {"Order":0, "RoutePattern":{"Defaults":{"action":"Post","controller":"Account"}, "ParameterPolicies":{}, "RequiredValues":{"action":"Post", "controller":"Account"}, "InboundPrecedence":1.1, "OutboundPrecedence":5.5, "RawText":"api/Account", "Parameters":[], "PathSegments":[{"IsSimple":true, "Parts":[{"Content":"api", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]},{"IsSimple":true, "Parts":[{"Content":"Account", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]}]}, "DisplayName":"WebApi.Controllers.AccountController.Post (WebApi)", "Metadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["POST"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpPostAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["POST"]},{"ControllerName":"Account", "ActionName":"Post", "MethodInfo":"Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String)", "ControllerTypeInfo":"WebApi.Controllers.AccountController", "DisplayName":"WebApi.Controllers.AccountController.Post (WebApi)", "Id":"82e22898-0856-4a78-acb8-7ed8bee0c915", "RouteValues":{"action":"Post","controller":"Account"}, "AttributeRouteInfo":{"Template":"api/Account", "Order":0, "SuppressLinkGeneration":false, "SuppressPathMatching":false}, "ActionConstraints":[{"HttpMethods":["POST"], "Order":100}], "EndpointMetadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["POST"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpPostAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["POST"]}], "Parameters":[{"ParameterInfo":{"ParameterType":"System.String", "Name":"email", "HasDefaultValue":false, "DefaultValue":"", "RawDefaultValue":"", "MetadataToken":134217747, "Attributes":"None", "Member":"Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String)", "Position":0, "IsIn":false, "IsLcid":false, "IsOptional":false, "IsOut":false, "IsRetval":false, "CustomAttributes":[]}, "Name":"email", "ParameterType":"System.String", "BindingInfo":{"BindingSource":{"DisplayName":"Query", "Id":"Query", "IsGreedy":false, "IsFromRequest":true}, "EmptyBodyBehavior":"Default"}},{"ParameterInfo":{"ParameterType":"System.String", "Name":"password", "HasDefaultValue":false, "DefaultValue":"", "RawDefaultValue":"", "MetadataToken":134217748, "Attributes":"None", "Member":"Microsoft.AspNetCore.Mvc.IActionResult Post(System.String, System.String)", "Position":1, "IsIn":false, "IsLcid":false, "IsOptional":false, "IsOut":false, "IsRetval":false, "CustomAttributes":[]}, "Name":"password", "ParameterType":"System.String", "BindingInfo":{"BindingSource":{"DisplayName":"Query", "Id":"Query", "IsGreedy":false, "IsFromRequest":true}, "EmptyBodyBehavior":"Default"}}], "BoundProperties":[], "FilterDescriptors":[{"Filter":{"Order":-3000}, "Order":-3000, "Scope":10},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"}, "Order":0, "Scope":20}], "Properties":{"Microsoft.AspNetCore.Mvc.ApiDescriptionActionData":{},"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute":{"Type":"Microsoft.AspNetCore.Mvc.ProblemDetails", "TypeId":"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute"}}},{},{"Order":-3000},{"Order":-2000, "IsReusable":true},{"Order":-2000, "IsReusable":true},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"HttpMethods":["POST"], "Order":100}], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" } }
{ "message": "Request finished HTTP/2 POST https://localhost:44307/api/Account?email=asp00net%40gmail.com&password=As%40137455 - 0 - 200 - application/json;+charset=utf-8 8944.9872ms", "level": "Info", "time": "2024-10-30 14:58:54.9242", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 8944.9872, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "POST", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Account", "QueryString": "?email=asp00net%40gmail.com&password=As%40137455", "EventId": 2 } }
{ "message": "Request starting HTTP/2 GET https://localhost:44307/api/Post - -", "level": "Info", "time": "2024-10-30 14:59:20.4561", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestStarting", "eventPropertise": { "Protocol": "HTTP/2", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Post", "QueryString": "", "EventId": 1 } }
{ "message": "Executed DbCommand (6ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']\r\nSELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[Id] = @__p_0", "level": "Info", "time": "2024-10-30 14:59:20.8279", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "6", "parameters": "@__p_0='?' (Size = 450)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Discriminator], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName], [u].[FullName]\r\nFROM [identity].[Users] AS [u]\r\nWHERE [u].[Discriminator] = N'User' AND [u].[Id] = @__p_0", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executing endpoint 'WebApi.Controllers.PostController.Get (WebApi)'", "level": "Info", "time": "2024-10-30 14:59:20.8395", "callsite": "Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke", "eventPropertise": { "EndpointName": {"Order":0, "RoutePattern":{"Defaults":{"action":"Get","controller":"Post"}, "ParameterPolicies":{}, "RequiredValues":{"action":"Get", "controller":"Post"}, "InboundPrecedence":1.1, "OutboundPrecedence":5.5, "RawText":"api/Post", "Parameters":[], "PathSegments":[{"IsSimple":true, "Parts":[{"Content":"api", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]},{"IsSimple":true, "Parts":[{"Content":"Post", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]}]}, "DisplayName":"WebApi.Controllers.PostController.Get (WebApi)", "Metadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Authorization.AuthorizeAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["GET"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpGetAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["GET"]},{"ControllerName":"Post", "ActionName":"Get", "MethodInfo":"Microsoft.AspNetCore.Mvc.IActionResult Get(Application.Posts.GetPostPLP.Dto.PostPLPRequestDto)", "ControllerTypeInfo":"WebApi.Controllers.PostController", "DisplayName":"WebApi.Controllers.PostController.Get (WebApi)", "Id":"e856e9fb-9bcf-42a5-8a16-c1d2ef7e179f", "RouteValues":{"action":"Get","controller":"Post"}, "AttributeRouteInfo":{"Template":"api/Post", "Order":0, "SuppressLinkGeneration":false, "SuppressPathMatching":false}, "ActionConstraints":[{"HttpMethods":["GET"], "Order":100}], "EndpointMetadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Authorization.AuthorizeAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["GET"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpGetAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["GET"]}], "Parameters":[{"ParameterInfo":{"ParameterType":"Application.Posts.GetPostPLP.Dto.PostPLPRequestDto", "Name":"requestDto", "HasDefaultValue":false, "DefaultValue":"", "RawDefaultValue":"", "MetadataToken":134217763, "Attributes":"None", "Member":"Microsoft.AspNetCore.Mvc.IActionResult Get(Application.Posts.GetPostPLP.Dto.PostPLPRequestDto)", "Position":0, "IsIn":false, "IsLcid":false, "IsOptional":false, "IsOut":false, "IsRetval":false, "CustomAttributes":[{"Constructor":"Void .ctor()", "ConstructorArguments":[], "NamedArguments":[], "AttributeType":"Microsoft.AspNetCore.Mvc.FromQueryAttribute"}]}, "Name":"requestDto", "ParameterType":"Application.Posts.GetPostPLP.Dto.PostPLPRequestDto", "BindingInfo":{"BindingSource":{"DisplayName":"Query", "Id":"Query", "IsGreedy":false, "IsFromRequest":true}, "EmptyBodyBehavior":"Default"}}], "BoundProperties":[], "FilterDescriptors":[{"Filter":{"Order":-3000}, "Order":-3000, "Scope":10},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"}, "Order":0, "Scope":20}], "Properties":{"Microsoft.AspNetCore.Mvc.ApiDescriptionActionData":{},"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute":{"Type":"Microsoft.AspNetCore.Mvc.ProblemDetails", "TypeId":"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute"}}},{},{"Order":-3000},{"Order":-2000, "IsReusable":true},{"Order":-2000, "IsReusable":true},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"HttpMethods":["GET"], "Order":100}], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"} } }
{ "message": "Route matched with {action = \"Get\", controller = \"Post\"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Get(Application.Posts.GetPostPLP.Dto.PostPLPRequestDto) on controller WebApi.Controllers.PostController (WebApi).", "level": "Info", "time": "2024-10-30 14:59:20.8737", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker+Log.ExecutingAction", "eventPropertise": { "RouteData": "{action = \"Get\", controller = \"Post\"}", "MethodInfo": "Microsoft.AspNetCore.Mvc.IActionResult Get(Application.Posts.GetPostPLP.Dto.PostPLPRequestDto)", "Controller": "WebApi.Controllers.PostController", "AssemblyName": "WebApi", "EventId": 102, "EventName": "ControllerActionExecuting" } }
{ "message": "Executing action method WebApi.Controllers.PostController.Get (WebApi) - Validation state: Valid", "level": "Info", "time": "2024-10-30 14:59:21.0206", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker+Log.ActionMethodExecuting", "eventPropertise": { "ActionName": "WebApi.Controllers.PostController.Get (WebApi)", "ValidationState": "Valid", "EventId": 101, "EventName": "ActionMethodExecuting" } }
{ "message": "Entity 'Post' has a global query filter defined and is the required end of a relationship with the entity 'PostImage'. This may lead to unexpected results when the required entity is filtered out. Either configure the navigation as optional, or define matching query filters for both entities in the navigation. See https://go.microsoft.com/fwlink/?linkid=2131316 for more information.", "level": "Warn", "time": "2024-10-30 14:59:21.6210", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2.Log", "eventPropertise": { "principalEntityType": "Post", "declaringEntityType": "PostImage", "EventId": 10622, "EventName": "Microsoft.EntityFrameworkCore.Model.Validation.PossibleIncorrectRequiredNavigationWithQueryFilterInteractionWarning" } }
{ "message": "Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']\r\nSELECT COUNT(*)\r\nFROM [Posts] AS [p]\r\nWHERE [p].[IsRemove] = CAST(0 AS bit)", "level": "Info", "time": "2024-10-30 14:59:21.7693", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "7", "parameters": "", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT COUNT(*)\r\nFROM [Posts] AS [p]\r\nWHERE [p].[IsRemove] = CAST(0 AS bit)", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "level": "Warn", "time": "2024-10-30 14:59:21.8105", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition.Log", "eventPropertise": { "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" } }
{ "message": "The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.", "level": "Warn", "time": "2024-10-30 14:59:21.8105", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition.Log", "eventPropertise": { "EventId": 10102, "EventName": "Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning" } }
{ "message": "Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']\r\nSELECT [t].[Id], [t].[CategoryTypeId], [t].[Content], [t].[InsertTime], [t].[IsRemove], [t].[PostDescription], [t].[RemoveTime], [t].[TimeRequired], [t].[Titel], [t].[UpdateTime], [t].[UserId], [t].[VisitCount], [t0].[Id], [p0].[Id], [p0].[InsertTime], [p0].[IsRemove], [p0].[PostId], [p0].[RemoveTime], [p0].[Src], [p0].[UpdateTime], [t0].[InsertTime], [t0].[IsRemove], [t0].[ParentTypeId], [t0].[RemoveTime], [t0].[Type], [t0].[UpdateTime]\r\nFROM (\r\n    SELECT [p].[Id], [p].[CategoryTypeId], [p].[Content], [p].[InsertTime], [p].[IsRemove], [p].[PostDescription], [p].[RemoveTime], [p].[TimeRequired], [p].[Titel], [p].[UpdateTime], [p].[UserId], [p].[VisitCount]\r\n    FROM [Posts] AS [p]\r\n    WHERE [p].[IsRemove] = CAST(0 AS bit)\r\n    ORDER BY (SELECT 1)\r\n    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY\r\n) AS [t]\r\nINNER JOIN (\r\n    SELECT [c].[Id], [c].[InsertTime], [c].[IsRemove], [c].[ParentTypeId], [c].[RemoveTime], [c].[Type], [c].[UpdateTime]\r\n    FROM [CategoryTypes] AS [c]\r\n    WHERE [c].[IsRemove] = CAST(0 AS bit)\r\n) AS [t0] ON [t].[CategoryTypeId] = [t0].[Id]\r\nLEFT JOIN [PostImage] AS [p0] ON [t].[Id] = [p0].[PostId]\r\nORDER BY [t].[Id], [t0].[Id]", "level": "Info", "time": "2024-10-30 14:59:21.9057", "callsite": "Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log", "eventPropertise": { "elapsed": "11", "parameters": "@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)", "commandType": "Text", "commandTimeout": 30, "newLine": "\r\n", "commandText": "SELECT [t].[Id], [t].[CategoryTypeId], [t].[Content], [t].[InsertTime], [t].[IsRemove], [t].[PostDescription], [t].[RemoveTime], [t].[TimeRequired], [t].[Titel], [t].[UpdateTime], [t].[UserId], [t].[VisitCount], [t0].[Id], [p0].[Id], [p0].[InsertTime], [p0].[IsRemove], [p0].[PostId], [p0].[RemoveTime], [p0].[Src], [p0].[UpdateTime], [t0].[InsertTime], [t0].[IsRemove], [t0].[ParentTypeId], [t0].[RemoveTime], [t0].[Type], [t0].[UpdateTime]\r\nFROM (\r\n    SELECT [p].[Id], [p].[CategoryTypeId], [p].[Content], [p].[InsertTime], [p].[IsRemove], [p].[PostDescription], [p].[RemoveTime], [p].[TimeRequired], [p].[Titel], [p].[UpdateTime], [p].[UserId], [p].[VisitCount]\r\n    FROM [Posts] AS [p]\r\n    WHERE [p].[IsRemove] = CAST(0 AS bit)\r\n    ORDER BY (SELECT 1)\r\n    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY\r\n) AS [t]\r\nINNER JOIN (\r\n    SELECT [c].[Id], [c].[InsertTime], [c].[IsRemove], [c].[ParentTypeId], [c].[RemoveTime], [c].[Type], [c].[UpdateTime]\r\n    FROM [CategoryTypes] AS [c]\r\n    WHERE [c].[IsRemove] = CAST(0 AS bit)\r\n) AS [t0] ON [t].[CategoryTypeId] = [t0].[Id]\r\nLEFT JOIN [PostImage] AS [p0] ON [t].[Id] = [p0].[PostId]\r\nORDER BY [t].[Id], [t0].[Id]", "EventId": 20101, "EventName": "Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted" } }
{ "message": "Executed action method WebApi.Controllers.PostController.Get (WebApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1125.9857ms.", "level": "Info", "time": "2024-10-30 14:59:22.1475", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker+Log.ActionMethodExecuted", "eventPropertise": { "ActionName": "WebApi.Controllers.PostController.Get (WebApi)", "ActionResult": "Microsoft.AspNetCore.Mvc.OkObjectResult", "ElapsedMilliseconds": 1125.9857, "EventId": 103, "EventName": "ActionMethodExecuted" } }
{ "message": "Executing OkObjectResult, writing value of type 'Application.Dtos.PaginatedItemsDto`1[[Application.Posts.GetPostPLP.Dto.PostPLPDto, Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.", "level": "Info", "time": "2024-10-30 14:59:22.1475", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor+Log.ObjectResultExecuting", "eventPropertise": { "ObjectResultType": "OkObjectResult", "Type": "Application.Dtos.PaginatedItemsDto`1[[Application.Posts.GetPostPLP.Dto.PostPLPDto, Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]", "EventId": 1, "EventName": "ObjectResultExecuting" } }
{ "message": "Executed action WebApi.Controllers.PostController.Get (WebApi) in 1314.3702ms", "level": "Info", "time": "2024-10-30 14:59:22.1902", "callsite": "Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker+Log.ExecutedAction", "eventPropertise": { "ActionName": "WebApi.Controllers.PostController.Get (WebApi)", "ElapsedMilliseconds": 1314.3702, "EventId": 105, "EventName": "ActionExecuted" } }
{ "message": "Executed endpoint 'WebApi.Controllers.PostController.Get (WebApi)'", "level": "Info", "time": "2024-10-30 14:59:22.1902", "callsite": "Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke", "eventPropertise": { "EndpointName": {"Order":0, "RoutePattern":{"Defaults":{"action":"Get","controller":"Post"}, "ParameterPolicies":{}, "RequiredValues":{"action":"Get", "controller":"Post"}, "InboundPrecedence":1.1, "OutboundPrecedence":5.5, "RawText":"api/Post", "Parameters":[], "PathSegments":[{"IsSimple":true, "Parts":[{"Content":"api", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]},{"IsSimple":true, "Parts":[{"Content":"Post", "PartKind":"Literal", "IsLiteral":true, "IsParameter":false, "IsSeparator":false}]}]}, "DisplayName":"WebApi.Controllers.PostController.Get (WebApi)", "Metadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Authorization.AuthorizeAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["GET"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpGetAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["GET"]},{"ControllerName":"Post", "ActionName":"Get", "MethodInfo":"Microsoft.AspNetCore.Mvc.IActionResult Get(Application.Posts.GetPostPLP.Dto.PostPLPRequestDto)", "ControllerTypeInfo":"WebApi.Controllers.PostController", "DisplayName":"WebApi.Controllers.PostController.Get (WebApi)", "Id":"e856e9fb-9bcf-42a5-8a16-c1d2ef7e179f", "RouteValues":{"action":"Get","controller":"Post"}, "AttributeRouteInfo":{"Template":"api/Post", "Order":0, "SuppressLinkGeneration":false, "SuppressPathMatching":false}, "ActionConstraints":[{"HttpMethods":["GET"], "Order":100}], "EndpointMetadata":[{"TypeId":"System.Runtime.CompilerServices.NullableContextAttribute"},{"TypeId":"System.Runtime.CompilerServices.NullableAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"TypeId":"Microsoft.AspNetCore.Authorization.AuthorizeAttribute"},{"TypeId":"Microsoft.AspNetCore.Mvc.ControllerAttribute"},{"Template":"api/[controller]", "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.RouteAttribute"},{"HttpMethods":["GET"], "Order":0, "TypeId":"Microsoft.AspNetCore.Mvc.HttpGetAttribute"},{"AcceptCorsPreflight":false, "HttpMethods":["GET"]}], "Parameters":[{"ParameterInfo":{"ParameterType":"Application.Posts.GetPostPLP.Dto.PostPLPRequestDto", "Name":"requestDto", "HasDefaultValue":false, "DefaultValue":"", "RawDefaultValue":"", "MetadataToken":134217763, "Attributes":"None", "Member":"Microsoft.AspNetCore.Mvc.IActionResult Get(Application.Posts.GetPostPLP.Dto.PostPLPRequestDto)", "Position":0, "IsIn":false, "IsLcid":false, "IsOptional":false, "IsOut":false, "IsRetval":false, "CustomAttributes":[{"Constructor":"Void .ctor()", "ConstructorArguments":[], "NamedArguments":[], "AttributeType":"Microsoft.AspNetCore.Mvc.FromQueryAttribute"}]}, "Name":"requestDto", "ParameterType":"Application.Posts.GetPostPLP.Dto.PostPLPRequestDto", "BindingInfo":{"BindingSource":{"DisplayName":"Query", "Id":"Query", "IsGreedy":false, "IsFromRequest":true}, "EmptyBodyBehavior":"Default"}}], "BoundProperties":[], "FilterDescriptors":[{"Filter":{"Order":-3000}, "Order":-3000, "Scope":10},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"Order":-2000, "IsReusable":true}, "Order":-2000, "Scope":30},{"Filter":{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"}, "Order":0, "Scope":20}], "Properties":{"Microsoft.AspNetCore.Mvc.ApiDescriptionActionData":{},"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute":{"Type":"Microsoft.AspNetCore.Mvc.ProblemDetails", "TypeId":"Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute"}}},{},{"Order":-3000},{"Order":-2000, "IsReusable":true},{"Order":-2000, "IsReusable":true},{"TypeId":"Microsoft.AspNetCore.Mvc.ApiControllerAttribute"},{"HttpMethods":["GET"], "Order":100}], "RequestDelegate":"Microsoft.AspNetCore.Http.RequestDelegate"}, "EventId": 1, "EventName": "ExecutedEndpoint" } }
{ "message": "Request finished HTTP/2 GET https://localhost:44307/api/Post - - - 200 - application/json;+charset=utf-8 1739.8291ms", "level": "Info", "time": "2024-10-30 14:59:22.1960", "callsite": "Microsoft.AspNetCore.Hosting.HostingApplicationDiagnostics.LogRequestFinished", "eventPropertise": { "ElapsedMilliseconds": 1739.8291, "StatusCode": 200, "ContentType": "application/json; charset=utf-8", "ContentLength": null, "Protocol": "HTTP/2", "Method": "GET", "Scheme": "https", "Host": "localhost:44307", "PathBase": "", "Path": "/api/Post", "QueryString": "", "EventId": 2 } }
